<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://altay.wtf/notes</id>
    <title>altay.wtf</title>
    <updated>2021-07-28T20:39:52.849Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://altay.wtf/notes"/>
    <link rel="self" href="https://altay.wtf/rss/notes/atom.xml"/>
    <subtitle>hi, my name is altay and this is my website.</subtitle>
    <rights>https://altay.wtf</rights>
    <entry>
        <title type="html"><![CDATA[Three definitions of success]]></title>
        <id>https://altay.wtf/notes/success</id>
        <link href="https://altay.wtf/notes/success"/>
        <updated>2020-12-21T20:41:04.000Z</updated>
        <summary type="html"><![CDATA[How to build your own hedonic treadmill.]]></summary>
        <content type="html"><![CDATA[<p>In his latest book <a href="https://altay.wtf/books/the-new-corporation"><em>The New Corporation</em></a>, Joel Balkan mentions a concept called <em>economization</em> (of individuals). Today&#39;s capital driven system is leaving its&#39; footprint on our personal lives. We&#39;re turning into living creatures operating as mini-corporations. Many of our actions carry a purpose to invest in ourselves and attract investors.</p>
<p>It&#39;s undeniable that the road to mastery is appealing in human&#39;s search for meaning. Yet, most of the fields we choose to pursue are serving economic imperatives. Even worse, our hobbies are transitioning into side hustles. We feel miserably trapped in the 9/6; every effort that produces a tangible outcome resembles an easy way out. As Austin Kleon also points out, our best compliment is telling somebody they&#39;re so good at what they love to do, they could make money at it. &quot;Wow, you could open a bakery!&quot;</p>
<p>As a person in-between Generation Y and Z, I can observe the impacts of economization on many people I know, including myself. Around the age of 12, we found ourselves in a race with our acquittances to get into a good high-school. Up next, there was another race for the university, which was beyond intense. In turn, we faced <em>real world</em>, where <em>studying</em> wasn&#39;t enough by itself; we also had to behave accordingly and look out for someone else&#39;s interest—either a human being or an institution.</p>
<p>Among all those years, I never had a clear definition of <em>success</em> in mind. I guess the default behavior is to follow what society celebrates. Human leverage –such as political power or having people work under you–, media leverage –hypnotizing people to repeatedly seeing your face or another body part on their screens–, and money leverage. Not surprisingly, they are material values. Being guided by anyone else&#39;s lights is not the best way to find our way out. It&#39;s a path that leads to envy, which is an open invitation for anger and dissatisfaction. There&#39;s no way to catch-up. But there is an alternative.</p>
<p>How can we define success in our terms and minimize unrealistic expectations? I&#39;m unable to answer on my own, but I know some people who could help.</p>
<h3 id="how-many-useful-things-you-create">How many useful things you create?</h3>
<p>Derek Sivers is one of the most interesting people I get to know over the last couple of years. He&#39;s been a musician, circus performer, entrepreneur, TED speaker, and book publisher. When he was an aspiring musician, he started <em>CD Baby</em> to sell his records online. Then things went crazy, and he ended up running a company that worths millions of dollars. After selling <em>CD Baby</em> –and donating a vast amount of his exit money to music education–, Derek published three books. They contain his thoughts and takeaways along his journey of life. In <a href="https://altay.wtf/books/anything-you-want"><em>Anything You Want</em></a>, he wrote a piece titled &quot;How do you grade yourself?&quot;</p>
<p>Here&#39;s an excerpt from it:</p>
<blockquote>
<p>We all grade ourselves by different measures:</p>
<ul>
<li>For some people, it&#39;s as simple as how much money they make. When their net worth is going up, they know they&#39;re doing well.</li>
<li>For others, it&#39;s how much money they give.</li>
<li>For some, it&#39;s how many people&#39;s lives they can influence for the better.</li>
<li>For others, it&#39;s how deeply they can influence just a few people&#39;s lives.</li>
</ul>
<p>For me, it&#39;s how many useful things I create, whether songs, companies, articles, websites, or anything else. If I create something that&#39;s not useful to others, it doesn&#39;t count. But I&#39;m also not interested in doing something useful unless it needs my creative input.</p>
<p>How do you grade yourself?</p>
<p>It&#39;s important to know in advance, to make sure you&#39;re staying focused on what&#39;s honestly important to you, instead of doing what others think you should.</p>
<p>– Derek Sivers</p>
</blockquote>
<p>I&#39;m sure you have plenty of ideas to solve problems many of us experienced first-hand. What&#39;s holding you from the generosity of sharing them with the rest of us?</p>
<h3 id="what-your-days-look-like">What your days look like?</h3>
<p>Austin Kleon is an inspiring creative who wrote three best-selling books, also known as <em>Steal Like an Artist</em> trilogy. If you haven&#39;t heard of him, give the first book a try. They are succinct and compelling. I bet you&#39;ll read the whole trilogy in a short period.</p>
<p>According to Austin, success is <a href="https://altay.wtf/books/keep-going">&quot;closing the gap between what your days look like and what you want your days to look like.&quot;</a> To leverage this idea, you need to know what your days look like. Writing things on paper has a surprising effect of surfacing the ridiculousness of inherent actions. It&#39;s a great start to find out what drives you away. There&#39;s no obligation to quit your day job to make time. Limitations such as scarcity feed creativity.</p>
<blockquote>
<p>When you don&#39;t have much time, a routine helps you make the little time you have count. When you have all the time in the world, a routine makes sure you don&#39;t waste it.</p>
<p>– Austin Kleon</p>
</blockquote>
<h3 id="stepping-out-of-the-game">Stepping out of the game</h3>
<p>Naval Ravikant also has many titles, but I see him as something like the Buddha of the digital age. I even had a human priest in World of Warcraft named after him. Running with sandals and a white robe to help my digital friends to slay dragons.</p>
<p>As an angel investor living in the middle of the industry, he has skin in the game and can surprisingly stay sane in all those mumbo jumbo. Naval hasn&#39;t published anything apart from a short-story and many prolific tweet-storms. A first-grade follower named Eric Jorgenson collected the wisdom sprinkled in various mediums and published an almanac.</p>
<p>Naval presents several perspectives of success, such as <em>changing the lives of humankind</em>, <em>doing extraordinary work</em>, and <em>the ability to step out of the game entirely</em>. I found the latter most inspiring.</p>
<blockquote>
<p>To me, the real winners are the ones who step out of the game entirely, who don&#39;t even play the game, who rise above it. Those are the people who have such internal mental and self-control and self-awareness; they need nothing from anybody else.</p>
<p>There are a couple of these characters I know in my life. Jerzy Gregorek—I would consider him successful because he doesn&#39;t need anything from anybody. He&#39;s at peace, he&#39;s healthy, and whether he makes more money or less money compared to the next person has no effect on his mental state.</p>
<p>Historically, I would say the legendary Buddha or Krishnamurti, whose stuff I like reading, they are successful in the sense that they step out of the game entirely. Winning or losing does not matter to them.</p>
<p>There&#39;s a line from Blaise Pascal I read. Basically, it says: &quot;All of man&#39;s troubles arise because he cannot sit in a room quietly by himself.&quot; If you could just sit for thirty minutes and be happy, you are successful.</p>
<p>– Naval Ravikant</p>
</blockquote>
<p>Naval&#39;s arguments resonate with several existential philosophies as they are about accepting what we can control and focusing on the process rather than the outcome.</p>
<p>This reminds me of Stoicism. If you&#39;re a wise person, you already know it better than me. If you&#39;re lucky, you read it in a book or another worthwhile medium. If you&#39;re neither of them, some productivity-guru YouTuber will soon preach it to you as his kryptonite behind consistently waking up at 5 AM and jumping into a cold shower or reading two thousand books a year. Don&#39;t forget to like and subscribe.</p>
<p>The Stoics advised to focus on what we control and let the rest happen; however it happens, and accept the outcome. Establishing a process is its own reward. Do whatever you can, within your power. Even if things don&#39;t turn out well, you&#39;ll be in peace with yourself because you tried your best. After all, most of our actions doesn&#39;t have an impact on the macroscopic scale.</p>
<blockquote>
<p>Consider the lives led once by others, long ago, the lives to be led by others after you, the lives led even now, in foreign lands. How many people don&#39;t even know your name.</p>
<p>How many will soon have forgotten it. How many offer you praise now—and tomorrow, perhaps, contempt.</p>
<p>That to be remembered is worthless. Like fame. Like everything.</p>
<p>– Marcus Aurelius</p>
</blockquote>
<p>We are going to die one day, and no one will remember us.</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[2020 in review]]></title>
        <id>https://altay.wtf/notes/2020</id>
        <link href="https://altay.wtf/notes/2020"/>
        <updated>2020-12-16T09:21:52.000Z</updated>
        <summary type="html"><![CDATA[Exploring my boundaries of self-destruction.]]></summary>
        <content type="html"><![CDATA[<p>Now that we&#39;re proceeding through the end of an interesting year, I scribbled a few words to look back and smile (or cry).</p>
<p>When we put the disastrous consequences aside, I&#39;m grateful to 2020 since it brought us an inevitable silence and solitude. However, sovereignty is a heavy responsibility to adapt quickly.</p>
<p>I summarize this year with three words: anxiety, uncertainty, and self-control. Depending on our capacity and mode, that trio could be the best and worst that can happen during isolation. Based on my experience, there&#39;s no middle ground. This path can lead to the lands of misery or something slightly better than that. The key is to accept and deal with the discomfort instead of running away from it. As Mark Manson says, <a href="https://altay.wtf/books/everything-is-fucked">pain is the universal constant, it&#39;s always there.</a> We can choose to suffer from pain by avoiding and pursuing fake happiness. Or we can grow by facing, experiencing, and letting it go.</p>
<h3 id="the-realm-of-self-destruction">The realm of self-destruction</h3>
<p>At the beginning of this year, I started to work at a distributed team. It&#39;s a tech-heavy squad full of all-stars that resides at the heart of a 300-developer ecosystem. It was a challenging journey to find myself a place to exist and contribute. However, the distance and workload made it hard to adapt. The inadequacy I felt as the rookie within the all-stars brought me nothing but disappointment. I was slow and not productive. By the time we entered the first lockdown, I made the mistake of searching for fulfillment by hedonism. Not surprisingly, that led me into a rabbit hole and established a daily routine that resembles the university&#39;s first year.</p>
<p>I woke up at 8:45 (15 minutes before our daily team-meeting), took a shower, worked till 18:00, then played games till I fell asleep (usually around 3 AM). My perception of time debilitated within games, coffee, snacks, and sleepless nights. Since I moved to Berlin (November 2018), I&#39;ve been keeping a journal, and I even broke that habit. There was nothing to write about because every day was the same. I don&#39;t even mention eating, reading, and social aspects. I raised an obnoxious behemoth for about three months.</p>
<p>As the quarantine and the weather improved (I also got stuck at Gold 5 after 300 games of League of Legends), something finally happened. I listened to the last logical piece left inside me and took two weeks off. Retrospectively, I was proud of the effectiveness of my self-destruction. As a consequence, there was no other way than the other extreme.</p>
<h3 id="who-was-that">Who was that?</h3>
<p>First, <a href="https://twitter.com/altaywtf/status/1296808857608622088">I built an inviting space to work at</a>. Then I jumped back on the productivity train by reading books such as <a href="https://www.calnewport.com/books/digital-minimalism"><em>Digital Minimalism</em></a> and <a href="https://altay.wtf/books/make-time"><em>Make Time</em></a>. I attempted a cleanse by lending my soul to habit tracking apps and my body to the calendar.</p>
<p>It undoubtedly helped me to get back on track. But please don&#39;t do it to yourself unless you are sick of getting your ass kicked by a bunch of 12 year-olds in every game, every day, till 3 AM.</p>
<p><img src="https://altay.wtf/images/notes/2020/calendar.png" alt="My calendar from September 2020"></p>
<p>I kept this schedule for several months, and my days converged into relatively liveable ones. Nowadays, I&#39;m trying to minimize my expectations from the outcome and focus on the processes instead.</p>
<ul>
<li>I&#39;m trying to understand <a href="https://altay.wtf/notes/why">why I am doing what I am doing</a>, discover what I value, and eliminate routines that don&#39;t contribute to my values.</li>
<li>I read every day for at least an hour and try to write to empathize with the authors. Facing the blank page also helps to get better at handling discomfort.</li>
<li>I built this website to support the idea of learning in public and consistently filling it to feed the process.</li>
<li>I&#39;m planning to leave Klarna when I get my permanent residency. I want to work on <em>something</em> that is <a href="https://www.theglobeandmail.com/opinion/article-new-corporations-are-up-to-the-same-old-tricks/">&quot;doing well while doing good&quot;</a> instead of championing consumerism. In the meantime, I will switch back to a product team that collaborates with many groups across the ecosystem, aiming to share the expertise obtained while working on the client architecture.</li>
</ul>
<p>Still, there&#39;s an infinitely scrolling list of anxieties in my head.<br>I&#39;m glad they exist; it means that there&#39;s a lot to do.</p>
<p>That&#39;s enough about me.</p>
<hr>
<p>Here&#39;s a list of cool things that might be useful for you.</p>
<h4 id="💡-enlightenments">💡 Enlightenments</h4>
<ul>
<li><a href="https://altay.wtf/notes/self-control"><em>Self-control is an illusion</em></a>, and <a href="https://markmanson.net/how-to-get-better"><em>the golden trio</em></a> from Mark Manson</li>
<li><a href="https://www.youtube.com/watch?v=2Xzh1BjCA5Q"><em>Amor Fati</em></a> from Friedrich Nietzsche</li>
<li><a href="https://altay.wtf/notes/manipulation"><em>Definition of manipulation</em></a> from Seth Godin</li>
<li><a href="https://altay.wtf/notes/the-vampire-test"><em>The vampire test</em></a> from Austin Kleon</li>
</ul>
<h4 id="📚-books-published-this-year-that-i-read-in-awe">📚 Books published this year that I read in awe</h4>
<ul>
<li><a href="https://altay.wtf/books/everything-is-fucked"><em>Everything is Fucked: A Book About Hope</em></a> by Mark Manson</li>
<li><a href="https://sive.rs/n"><em>Hell Yeah Or No</em></a> by Derek Sivers</li>
<li><a href="https://altay.wtf/books/the-new-corporation"><em>The New Corporation</em></a> by Joel Bakan</li>
<li><a href="https://altay.wtf/books/the-practice"><em>The Practice</em> </a> by Seth Godin</li>
<li><a href="https://altay.wtf/books/laws-of-ux"><em>Laws of UX</em></a> by Jon Yablonski</li>
</ul>
<h4 id="📚-books-not-published-this-year-but-i-still-read-in-awe">📚 Books not published this year, but I still read in awe</h4>
<ul>
<li><a href="https://austinkleon.com/steal/"><em>Steal Like an Artist</em></a> by Austin Kleon</li>
<li><a href="https://altay.wtf/books/bird-by-bird"><em>Bird by Bird</em></a> by Anne Lamott</li>
<li><a href="https://altay.wtf/books/utopia-for-realists"><em>Utopia for Realists</em></a> by Rutger Bregman</li>
<li><a href="https://altay.wtf/books/anything-you-want"><em>Anything You Want</em></a> by Derek Sivers</li>
<li><a href="https://altay.wtf/books/the-pragmatic-programmer"><em>The Pragmatic Programmer</em></a> by Dave Thomas and Andrew Hunt</li>
</ul>
<h4 id="🎙-podcasts-of-the-voices-i-heard-more-than-any-living-creature">🎙 Podcasts of the voices I heard more than any living creature</h4>
<ul>
<li><a href="https://fularsizentellik.com/podcast"><em>Fularsız Entellik</em></a> by Immanuel Tolstoyevski</li>
<li><a href="https://designdetails.fm"><em>Design Details</em></a> by Marshall Bock and Brian Lovin</li>
<li><a href="https://www.akimbo.link"><em>Akimbo</em></a> by Seth Godin</li>
<li><a href="https://www.techwontsave.us"><em>Tech Won&#39;t Save Us</em></a> by Paris Marx</li>
</ul>
<h4 id="🎧-tunes-on-repeat">🎧 Tunes on repeat</h4>
<ul>
<li><a href="https://open.spotify.com/album/2xkZV2Hl1Omi8rk2D7t5lN?si=1S12WMUXQJeAUuOKn2O7lg"><em>The New Abnormal</em></a> by The Strokes</li>
<li><a href="https://open.spotify.com/album/5bfpRtBW7RNRdsm3tRyl3R?si=mzc6tiC_Td-Y4zIgqGr3EQ"><em>Dreamland</em></a> by Glass Animals</li>
<li><a href="https://open.spotify.com/album/2Yn5QhZEEoDl1MDMVjY3Ao?si=DLxQdJKKSJuqedEB9j6OhQ"><em>Get a Grip</em></a> by Royal &amp; the Serpent</li>
</ul>
<h4 id="📺-series-binge-watched-with-no-regrets">📺 Series binge-watched with no regrets</h4>
<ul>
<li><a href="https://www.imdb.com/title/tt10801534/">How to with John Wilson</a> and <a href="https://www.imdb.com/title/tt8531222/">Dave</a>, thanks to <a href="https://berk.studio">Berk.</a></li>
<li><a href="https://www.imdb.com/title/tt7016936">Killing Eve</a> and <a href="https://www.imdb.com/title/tt7660850/">Succession</a>, kudos to Matthias.</li>
<li><a href="https://www.imdb.com/title/tt10986410">Ted Lasso</a></li>
</ul>
<h4 id="📰-miscellaneous-mediums-i-spent-many-hours">📰 Miscellaneous mediums I spent many hours</h4>
<ul>
<li><a href="https://offscreenmag.com">Offscreen Magazine</a></li>
<li><a href="https://densediscovery.com">Dense Discovery</a></li>
<li><a href="https://markmanson.net">Mark&#39;s Blog</a></li>
<li><a href="https://nesslabs.com">Nesslabs</a></li>
<li><a href="https://blog.pragmaticengineer.com/now/">Pragmatic Engineer</a></li>
</ul>
<p>Well, now it&#39;s your turn. <br>Tell us what 2020 did to you. <br>Share what helped you to keep going.</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Release your mentors]]></title>
        <id>https://altay.wtf/notes/mentors</id>
        <link href="https://altay.wtf/notes/mentors"/>
        <updated>2020-12-11T18:42:27.000Z</updated>
        <summary type="html"><![CDATA[Don't be a daydreaming fucktard.]]></summary>
        <content type="html"><![CDATA[<p>I have spent a considerable amount of my life searching for mentors. It has always been hard to find a good match, especially during adolescence. As I grew older and narrowed my interests down, I got closer to people I look up to. Yet, I only experienced the harmonic craftsman–apprentice relationships in stories. My numerous quests to find a mentor as a novice often ended up with huge disappointments. Still, I hoped for the days that would bring me the long-awaited resonance. I searched for someone to help me direct my enthusiasm to something meaningful, someone to help me understand why I am doing what I am doing, someone to give me the courage to create. It took me quite a long time with trial and error to realize how impossible that is. It&#39;s the most stupid expectation I ever had. Eventually, I have opened my eyes. There is less hope involved since then. If you can live without hope, nothing will disappoint you.</p>
<h3 id="mentors-dont-scale">Mentors don&#39;t scale</h3>
<p>In his interview with <em>The Futur</em>, Seth Godin presents a remarkably persuasive idea that bursts the bubble of mentorship: <strong>heroes over mentors.</strong></p>
<p>He says that we usually get this two-hundred IQ advice from the hustle people, to find ourselves a mentor—a mentor who&#39;ll look out for us, a mentor that can change everything. The math, however, doesn&#39;t add up. For every prolific person in the public eye, there are thousands of people who want that person to be their mentor. This approach doesn&#39;t scale. It never did, and never will.</p>
<p>The alternative is to find heroes that don&#39;t even need to be aware of our existence. We can study their ideas and ask ourselves what would they do in such situations. Heroes are easy to find, and they scale exponentially. It&#39;s the most beneficial leverage of the digital age. We have no excuse to say we are stuck because we don&#39;t have a mentor. The world is full of heroes, and we don&#39;t need anyone&#39;s permission.</p>
<h3 id="mentors-may-manipulate">Mentors may manipulate</h3>
<p>In the real world, everyone minds their own business. Today, we build most of the mentor-mentee relationships to serve a business. We are living in an era in which nobody gives unconditionally. There is always a bargain unless you are not playing zero-sum games.</p>
<p>In his (another) recent interview with <em>Offscreen Magazine</em>, Seth Godin presents a crystal clear definition of manipulation.</p>
<blockquote>
<p><em>If people know what you already know –about your product, your service, and your methods– would they still be eager to buy from you?</em></p>
<p><em>If we use leverage and pressure to get someone to make a short-term decision that they will regret in the long run, we&#39;ve manipulated them.</em></p>
</blockquote>
<p>If you have a mentor that you collaborate on a particular thing, go and tell her that you consider heading towards a different path. How does she react? Is she trying to convince you not to, or just being happy for you? Are you able to collaborate as efficiently as you can till the day comes? What breaks it?</p>
<p>Nonetheless, it would be an arrogant inference to label all mentors as selfish manipulators. There&#39;s always a possibility to find inherently generous people. When you do, push them to be heroes.</p>
<h3 id="wherever-you-go-there-you-are">Wherever you go, there you are</h3>
<p>&quot;Be prepared for two scenarios&quot; is one of the numerous pieces of advice from another hero, Derek Sivers. The first scenario depends on nobody but you. There are no lucky breaks. Develop your skills, be resourceful, small, and sustainable. Assume nobody is going to help you. No mentors, no investors, no heritage, no lottery. It&#39;s all up to you. You can&#39;t wait because there is nobody to wait for.</p>
<p>No matter what you do, where you do, and who you do with, your presence is the universal constant of every equation. Once you realize that this is the real deal, many synthetic issues will disappear.</p>
<p>And when someone does help you, it will make the situation even better.</p>
<h3 id="you-as-a-mentor">You, as a mentor</h3>
<p>Now it&#39;s time to put yourself into the shoes of the people you see as mentors. Imagine living a life where you already have a lot on your plate. Every day, you wake up with an inner voice that tells you <em>&quot;come on, buddy, today is the day. Today we show that middle finger to the system and people that stress us. Then we move into a beach house.&quot;</em> You unwillingly get up and go to work. Then the fucktard you hired to lighten your load arrives, asking for directions. Directions of the path that you barely convinced your inner voice to stand a couple of more years. You generously teach everything you know, hoping that someone will see your efforts and give you something in return. Then one day, the fucktard wants to leave. You try your best to persuade, yet fail miserably. After all, you start negotiating with your inner voice to stand some more years. How does that feel?</p>
<p>&nbsp;</p>
<p>I don&#39;t know how much of a social being you are, but I have a very limited number of people around me. And all those poor souls are dealing with many problems. I don&#39;t want to give them this burden of responsibility by declaring them as mentors. I don&#39;t want anyone to think of me as a &quot;mentor&quot; as well; I&#39;m a gazillion galaxies far from that. Nobody deserves this obligatory model-citizen role. Unless they voluntarily shout it. If they do, then it&#39;s my duty to encourage them to scale.</p>
<p>Do yourself and your mentors a favor. <br>Set them free, and help them to become heroes.</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Formula of Humanity]]></title>
        <id>https://altay.wtf/notes/formula-of-humanity</id>
        <link href="https://altay.wtf/notes/formula-of-humanity"/>
        <updated>2020-12-06T16:35:53.000Z</updated>
        <summary type="html"><![CDATA[Brought to you by Immanuel Kant]]></summary>
        <content type="html"><![CDATA[<p>Directly influenced by <a href="https://www.youtube.com/watch?v=nsgAsw4XGvU">Immanuel Kant&#39;s moral philosophy</a>, in <a href="https://altay.wtf/books-everything-is-fucked">Everything is Fucked</a> Mark Manson discusses:</p>
<p>Consciousness is what distinguishes humans from other living creatures.</p>
<p>Our conscious helps us to understand the nature, overcome complexities, and create even more complex systems.</p>
<p>The most fundamental moral duty for every <em>mature</em> human being should be the preservation and growth of the collective conscious.</p>
<blockquote>
<p>Act that you use humanity, whether in your own person or in the person of any other, always at the same time as an end, by no other means.</p>
<p>– Immanuel Kant</p>
</blockquote>
<p>Unlike any other moral systems or codes, the formula of humanity does not rely on hope.</p>
<ul>
<li>The only logical way to improve the world is through improving ourselves by growing up and being more virtuous.</li>
<li>Your ability to be honest, respectful, caring against yourself will also improve how you interact with others and influence them to do the same.</li>
<li>Dignity and respect over all religions: don&#39;t manipulate, treat, enslave people just because you&#39;ll gain something at the end.</li>
</ul>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[A private email setup with noise reduction]]></title>
        <id>https://altay.wtf/notes/email</id>
        <link href="https://altay.wtf/notes/email"/>
        <updated>2020-12-05T20:24:38.000Z</updated>
        <summary type="html"><![CDATA[My justification for paying 3.29 EUR per month for something free.]]></summary>
        <content type="html"><![CDATA[<p>Do you remember the first-ever email address you&#39;ve signed up for?</p>
<p>Mine was <code>djaty2@hotmail.com</code>. I was ten years old. I inherited the nickname from a close friend (<code>djazy2</code>) that lived in the same neighborhood. I don&#39;t know why <code>&quot;dj&quot;</code>, though. We were chatting on MSN Messenger and playing Counter-Strike the whole day.</p>
<p>I used that address for several years. Then Facebook came out, and MSN Messenger lost its popularity. Gmail grew as well. I was smart enough –still surprised by that– to get <code>altay.aydemir@gmail.com</code> when I was twelve. Still, I kept using weird addresses such as <code>klozetkapagi@punkerland.com</code> (toilet seat cover) during my teenage period.</p>
<p>When my digital presence reached to a level of maturity to use a proper email address, I already forgot the password of <code>altay.aydemir</code>. I suffered from this shame under the name of <code>altay.aydemir0</code> and <code>aydemir.altay</code>. It&#39;s still vague, but I managed to remember the password around 2013. I regained my identity as <code>altay.aydemir</code> and kept it till recently.</p>
<p>Over the years, email became something more useful than just mindlessly handing out to random services. It helped me connect with people, get job offers, learn stuff, and follow what&#39;s going on around the globe.</p>
<p>Now I use my custom domain with a service provider, and you are reading a post where I brag about my setup to convince you to use my affiliate link to sign-up. No I don&#39;t.</p>
<h3 id="problems-of-gmail">Problems of Gmail</h3>
<p>It belongs to Google, one of the biggest ad networks in the world. Gmail is free, and Google is a revenue-driven company, like most businesses. When those businesses want to increase their revenue, they hire smart people. Those smart people discover smart ways to make use of what they know about us. Then every few months, we get a new documentary, book, or podcast to tell how the best minds of our generation are spending their willpower. Here we repeat the famous <strong><em>&quot;if you are not paying for the product, you are the product&quot;</em></strong> quote. There&#39;s no need to go over the details, just <em>Google</em> &quot;Gmail and Privacy.&quot; I&#39;m surprised <a href="https://protonmail.com/blog/google-privacy-problem/">this ProtonMail article</a> shows up on the first page.</p>
<h3 id="benefits-of-using-your-domain">Benefits of using your domain</h3>
<ul>
<li>It looks cool. Isn&#39;t the digital world is mostly about looking cool? Here you have a set of keys to the kingdom.</li>
<li>You can carry it over between providers. Maintaining your email server is also an option, yet not the most cost-effective.</li>
<li>People around you can benefit from it. If you hold <code>familyname.com</code> you can create an address for your relatives, for example.</li>
</ul>
<h3 id="saying-goodbye-to-gmail">Saying goodbye to Gmail</h3>
<p>Based on the thoughts above, I was looking for three fundamental features:</p>
<ul>
<li>Ethical, privacy-focused.</li>
<li>Supports custom domains.</li>
<li>Easy to move from Gmail: import existing emails, redirect new emails.</li>
</ul>
<p>And several nice-to-have items:</p>
<ul>
<li><strong>Catch-all or alias.</strong> I want to create arbitrary addresses (such as <code>a+twitter@aydemir.io</code>) for specific use-cases. It helps to differentiate our fellas and foes in the digital realm. If I get an automated email looking for a Java developer to work at the North-Pole, I&#39;ll have a chance to guess where they bought my email address from.</li>
<li><strong>Filters for incoming emails.</strong> I want to mark non-crucial messages as read and group them within a folder to reduce noise. I value maintaining an inbox-zero. Facing a dozen unread newsletters every Monday doesn&#39;t help.</li>
<li><strong>SMTP support on desktop.</strong> I use Apple Mail on desktop. I try not to use an email app on my phone and tablet unless I can shield myself from the notification bombardment.</li>
</ul>
<p>When searching for Gmail alternatives, I found a few useful resources, such as <a href="https://ethical.net/resources/?resource-category=email-services">ethical.net</a> and <a href="https://switching.software/replace/gmail/">switching.software</a>.</p>
<p>Tutanota and Protonmail seem to be the best options. Protonmail is more comprehensive, feature-rich, but naturally more expensive (5 EUR/month). However, I was familiar with Tutanota from the past, and it&#39;s cheaper (1 EUR/month). So decided to try that first.</p>
<p><img src="https://altay.wtf/images/notes/email/tutanota.jpg" alt="Tutanota Logo"></p>
<h3 id="tutanota">Tutanota</h3>
<p>Unfortunately, Tutanota doesn&#39;t have an import feature. It actually made me go through my archived emails and rethink what&#39;s important. However, I still need to carry over many of them. I considered forwarding all emails to my new mailbox. But that&#39;s an obnoxious process with a lot of repetition. I ended up doing it only for the most recent conversations. Maybe all I need was just a fresh start.</p>
<p>Setting up the redirection is straightforward since it&#39;s mostly on Gmail&#39;s side. I&#39;ve created a dedicated folder for redirected emails for the sake of categorization.</p>
<p>Tutanota includes the catch-all feature in the premium plan. It gives us the opportunity of creating arbitrary addresses like there&#39;s no tomorrow. I&#39;m used to leveraging the alias pattern (<code>altay.aydemir+twitter</code>) from Gmail. I did the same here and used addresses like <code>a+twitter@aydemir.io</code> (<code>twitter@aydemir.io</code> is also possible with <code>catch-all</code>).</p>
<p>We can create incoming email filters in Tutanota, yet they are disappointingly inadequate. There&#39;s no room for basic acrobatics like <code>mark as read</code>. We can only move them to specific folders. I contacted customer support to ask about <code>mark as read</code> to not get push notifications for every incoming mail. They recommended marking them as spam. I live by the fact that workarounds are the anchors of software development, but this hurts my brain.</p>
<p>Another issue I&#39;ve discovered is that the client sends the push notification as soon as the email arrives. It runs the email filters afterwards. This flow makes the workaround even worse. I get a notification, reach out to my phone, open the Tutanota iOS app then the email slips away from my eyesight on its way to the spam folder.</p>
<p>Tutanota doesn&#39;t have SMTP support on the desktop, but they offer apps for every platform, and they all look the same. The interface is clean, yet it&#39;s not optimized for the best user experience. Many small flaws made me miss Gmail&#39;s intuitive interface. I couldn&#39;t <code>archive</code> an email with one click, for example. Dropdown, dropdown, here I come.</p>
<p>By the time I&#39;m about to complete my first month in Tutanota, I was already looking for Black Friday offers from ProtonMail.</p>
<p><img src="https://altay.wtf/images/notes/email/protonmail.jpg" alt="Protonmail Logo"></p>
<h3 id="protonmail">ProtonMail</h3>
<p>The complaint-rich experience I cried above helped me to discover what I need from an email service. With a 30% discount on their plus plan, ProtonMail felt like a big bottle of water in Sahara. It&#39;s not a surprise considering that they&#39;ve been in the market for a long time.</p>
<p>ProtonMail offers multiple ways to import/export emails with a tool dedicated to this purpose. It works like a charm both over IMAP with Gmail, and plain <code>eml</code>, which I followed to import emails from Tutanota and iCloud. The whole process took less than 30-minutes.</p>
<p>They don&#39;t have <code>catch-all</code> feature in the plus plan (available in business), but they support <code>aliases</code> as the same pattern with Gmail. It made the transition effortless for my setup, where I create an alias (<code>a+&lt;something&gt;</code>) for each service.</p>
<p>ProtonMail has extensive options to filter emails, with an option to skip sending push notifications. This feature single-handedly makes the service worth paying three times more.</p>
<p><img src="https://altay.wtf/images/notes/email/setup-1.png" alt="Noise Setup"><br><img src="https://altay.wtf/images/notes/email/setup-2.png" alt="Noise Setup"><br><img src="https://altay.wtf/images/notes/email/setup-3.png" alt="Noise Setup"></p>
<p>They also have an <code>SMTP Bridge</code> application for desktop, and the instructions are pretty clear. I&#39;m able to do whatever I could do with Gmail; nothing is crippled. The <code>skip sending push notification</code> feature also convinced me to install the mobile app instead of obsessively checking the web app. Noise reduction is achieved!</p>
<p>Eventually, my several days of fascination lead to committing ProtonMail with a 2-year plan. If you read till this point and consider a similar setup, here&#39;s a flowchart for you. Please don&#39;t hesitate to reach out if I can help somehow.</p>
<p><img src="https://altay.wtf/images/notes/email/decision-diagram.jpg" alt="Decision diagram"></p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Our consciousness car]]></title>
        <id>https://altay.wtf/notes/consciousness-car</id>
        <link href="https://altay.wtf/notes/consciousness-car"/>
        <updated>2020-12-05T09:57:23.000Z</updated>
        <summary type="html"><![CDATA[Beep beep.]]></summary>
        <content type="html"><![CDATA[<p>It has two travelers:</p>
<ul>
<li>The Thinking Brain (conscious thoughts, calculation, reasoning)</li>
<li>The Feeling Brain (desires, impulses, emotions).</li>
</ul>
<p>As opposed to the classical assumption (of we&#39;re purely logical creatures and if you&#39;re slacking of it&#39;s because you can&#39;t control your desires), it turns out our Feeling Brain sits on the driver seat. The Thinking Brain (busy reading a book) sits in the passenger seat and acts as the navigator.</p>
<p>Thinking Brain is the supporting character, but it imagines itself as the hero. It can&#39;t control the Feeling Brain, but can suggest shortcuts or more rational choices while taking action. Yet sometimes they are not the best ones.</p>
<p>That leads to the simplest and most obvious answer to the timeless question, why don&#39;t we do things we should do?</p>
<p><strong>Because we don&#39;t feel like it.</strong></p>
<p>Self-control is an emotional problem, and even worse news: emotional problems can only have emotional solutions.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://altay.wtf/books/everything-is-fucked">Everything is Fucked</a></li>
</ul>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Self-control is an illusion]]></title>
        <id>https://altay.wtf/notes/self-control</id>
        <link href="https://altay.wtf/notes/self-control"/>
        <updated>2020-12-05T09:53:32.000Z</updated>
        <summary type="html"><![CDATA[Phew, now I can eat that donut.]]></summary>
        <content type="html"><![CDATA[<p>Over the years, we developed a classical assumption to interpret human behavior. If we are organized and successful, that would prove that we can control our emotions. We can focus on work instead of binge watching or abusing video games. That means emotions cause all our problems and swooping them up would clean up the mess.</p>
<p>The fact is that we require more than will-power to achieve self-control. Our emotions are instrumental in our decision making and actions. We just don&#39;t always realize it.</p>
<p>Everything happens in <a href="https://altay.wtf/notes/consciousness-car">our consciousness car</a>.</p>
<h3 id="references">References</h3>
<ul>
<li><a href="https://altay.wtf/books/everything-is-fucked">Everything is Fucked</a></li>
<li><a href="https://www.spreaker.com/user/markmetry/self-control-is-an-illusion-w-mark-manso">Humans 2.0 | Mind Upgrade</a></li>
</ul>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dictionary – etymology]]></title>
        <id>https://altay.wtf/notes/dict-etymology</id>
        <link href="https://altay.wtf/notes/dict-etymology"/>
        <updated>2020-12-03T19:12:12.000Z</updated>
        <summary type="html"><![CDATA[Roots of some words I came across while reading.]]></summary>
        <content type="html"><![CDATA[<h3 id="neon">neon</h3>
<p>The element neon was named from the Greek neos, meaning &quot;new.&quot;</p>
<p><a href="https://altay.wtf/books/the-99-percent-invisible-city">The 99% Invisible City</a></p>
<hr>
<h3 id="quatrefoil">quatrefoil</h3>
<p>Anglo-French quatre (four), and the Middle-English foil (leaves).</p>
<p><a href="https://altay.wtf/books/the-99-percent-invisible-city">The 99% Invisible City</a></p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dictionary – phrases]]></title>
        <id>https://altay.wtf/notes/dict-phrases</id>
        <link href="https://altay.wtf/notes/dict-phrases"/>
        <updated>2020-12-03T19:12:12.000Z</updated>
        <summary type="html"><![CDATA[Interesting phrases I came across while reading.]]></summary>
        <content type="html"><![CDATA[<h3 id="lack-of-everyday-exposure-to-">lack of everyday exposure to <something></h3>
<p><em>Their developer&#39;s lack of everyday exposure to language and its alphabet is also evident in the typeface designs.</em></p>
<p><a href="https://altay.wtf/books/arcade-game-typography">Arcade Game Typography</a></p>
<hr>
<h3 id="there-is-a-lot-thats-been-set-on-motion-that-we-cannot-undo">there is a lot that’s been set on motion that we cannot undo</h3>
<p><em>I am married to a marine biologist and there is definitely a lot that has been set on motion that we cannot undo.</em></p>
<p>Answering the &quot;How screwed are we&quot; question in How to Save a Planet podcast</p>
<hr>
<h3 id="step-ones-toes">step one&#39;s toes</h3>
<p>to insult, or upset one.</p>
<hr>
<h3 id="to-shed-some-light-on-">to shed some light on <X></h3>
<p>to clarify something.</p>
<hr>
<h3 id="-in-awe"><doing something> in awe</h3>
<p><em>walked to his job interview in awe.</em></p>
<hr>
<h3 id="being-trapped-in-the-web-of-">being trapped in the web of <X></h3>
<p><em>Trapped in the web of desires.</em></p>
<hr>
<h3 id="push-the-boat-out">push the boat out</h3>
<p><em>🇹🇷 kesenin agzini acmak</em></p>
<hr>
<h3 id="intangibles-that-produce-">intangibles that produce <x></h3>
<p><em>I am more interested in the intangibles that produce good writing</em></p>
<p><a href="https://altay.wtf/books/on-writing-well">On Writing Well</a></p>
<hr>
<h3 id="growing-arsenal-of-">growing arsenal of <x></h3>
<p><em>Every profession has its growing arsenal of jargon.</em></p>
<p><a href="https://altay.wtf/books/on-writing-well">On Writing Well</a></p>
<hr>
<h3 id="throwing-dust-in-the-eyes-of-someone">throwing dust in the eyes of someone</h3>
<p><em>Every profession has its growing arsenal of jargon to throw dust in the eyes of the populace.</em></p>
<p><a href="https://altay.wtf/books/on-writing-well">On Writing Well</a></p>
<hr>
<h3 id="-can-carry-"><x> can carry <y></h3>
<p><em>A short sentence can carry a tremendous punch.</em></p>
<p><a href="https://altay.wtf/books/on-writing-well">On Writing Well</a></p>
<hr>
<h3 id="-is-the-anchor-of-"><x> is the anchor of <y></h3>
<p><em>Unity is the anchor of good writing.</em></p>
<p><a href="https://altay.wtf/books/on-writing-well">On Writing Well</a></p>
<hr>
<h3 id="being-thick-with-">being thick with <x></h3>
<p><em>Our daily landscape is thick with absurd messages.</em></p>
<p><a href="https://altay.wtf/books/on-writing-well">On Writing Well</a></p>
<hr>
<h3 id="distortion-of-reality">distortion of reality</h3>
<hr>
<h3 id="what-holds-the-ectoplasm-together">what holds the ectoplasm together?</h3>
<p><em>What holds the ectoplasm together –what are your routines and beliefs?</em></p>
<p><a href="https://altay.wtf/books/bird-by-bird">Bird by Bird</a></p>
<hr>
<h3 id="x-is-one-of-the-occupational-hazards-of-y">x is one of the occupational hazards of y</h3>
<p>hazard: danger or risk.</p>
<p><em>Jealousy is one of the occupational hazards of being a writer.</em></p>
<p><a href="https://altay.wtf/books/bird-by-bird">Bird by Bird</a></p>
<hr>
<h3 id="-from-top-to-bottom"><doing x> from top to bottom</h3>
<p><em>Kant reinvented moral philosophy from top the bottom.</em></p>
<p><a href="https://altay.wtf/books/everything-is-fucked">Everything is Fucked: A Book About Hope</a></p>
<hr>
<h3 id="you-dont-always-chop-with-the-sword-of-">you don&#39;t always chop with the sword of <x></h3>
<p><em>You don&#39;t always chop with the sword of truth.</em></p>
<p><a href="https://altay.wtf/books/bird-by-bird">Bird by Bird</a></p>
<hr>
<h3 id="futility-of-resistance">futility of resistance</h3>
<p>futile: incapable of producing useful result.</p>
<p><em>Finally realizing the futility of resistance, officials caved and left the traffic lights upside down.</em></p>
<p><a href="https://altay.wtf/books/the-99-percent-invisible-city">The 99% Invisible City</a></p>
<hr>
<h3 id="paragon-of-">paragon of <x></h3>
<p>paragon: a person or a thing regarded as a perfect example</p>
<p><em>At the time the video of the defeat device released, Volkswagen was thought as a paragon of corporate virtue.</em></p>
<p><a href="https://altay.wtf/books/the-new-corporation">The New Corporation</a></p>
<hr>
<h3 id="guided-by-own-lights">guided by own lights</h3>
<p><em>Working on a corporation putting self-interest over all values, Lord Browne was not guided by his own lights.</em></p>
<p><a href="https://altay.wtf/books/the-new-corporation">The New Corporation</a></p>
<hr>
<h3 id="breathing-down-its-neck">breathing down its neck</h3>
<p>Your unconscious can&#39;t work when you are breathing down its neck.</p>
<p><a href="https://altay.wtf/books/bird-by-bird">Bird by Bird</a></p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dictionary – words]]></title>
        <id>https://altay.wtf/notes/dict-words</id>
        <link href="https://altay.wtf/notes/dict-words"/>
        <updated>2020-12-03T19:12:12.000Z</updated>
        <summary type="html"><![CDATA[I didn't know the meaning of those words, but now I can remember.]]></summary>
        <content type="html"><![CDATA[<h3 id="reconnaissance">reconnaissance</h3>
<p>exploration, discovery.</p>
<p><em>Think of prototyping as the reconnaissance and intelligence gathering that takes place before a single tracer bullet is fired.</em></p>
<p><a href="https://altay.wtf/books/the-pragmatic-programmer">The Pragmatic Programmer</a></p>
<hr>
<h3 id="chagrin">chagrin</h3>
<p>feel dismissed or humiliated</p>
<p><em>The book is in plain text, much to the chagrin of the publisher who wanted us to use a word processor.</em></p>
<p><a href="https://altay.wtf/books/the-pragmatic-programmer">The Pragmatic Programmer</a></p>
<hr>
<h3 id="semaphore">semaphore</h3>
<p>A semaphore is simply a thing that only one person can own at a time.</p>
<p><em>Shared resource locking example for opening the pie case by holding an object.</em></p>
<p><a href="https://altay.wtf/books/the-pragmatic-programmer">The Pragmatic Programmer</a></p>
<hr>
<h3 id="ephemeral">ephemeral</h3>
<p>lasting for a very short time - temporary.</p>
<p><em>Version control allows builds machines to be ephemeral.</em></p>
<p><a href="https://altay.wtf/books/the-pragmatic-programmer">The Pragmatic Programmer</a></p>
<hr>
<h3 id="shirk">shirk</h3>
<p>avoid or neglect (a duty or responsibility).</p>
<p><em><a href="https://altay.wtf/books/the-pragmatic-programmer">Pragmatic programmer</a>s don&#39;t shirk from responsibility.</em></p>
<hr>
<h3 id="rejoice">rejoice</h3>
<p>feel or show great joy or delight.</p>
<p><em>Instead, we rejoice in accepting challenges.</em></p>
<hr>
<h3 id="accrue">accrue</h3>
<p>accumulate or receive (payments or benefits) over time.</p>
<p><em>Extraordinary benefits accrue to the tiny minority of people who are able to push just a tiny bit longer than most.</em></p>
<p><a href="https://altay.wtf/books/the-dip">The Dip</a></p>
<hr>
<h3 id="adversity">adversity</h3>
<p>a difficult or unpleasant situation.</p>
<p><em>You shouldn&#39;t quit in the face of adversity.</em></p>
<p><a href="https://altay.wtf/books/the-dip">The Dip</a></p>
<hr>
<h3 id="obnoxious">obnoxious</h3>
<p>extremely unpleasant.</p>
<p><em>Obnoxious customer.</em></p>
<p><a href="https://altay.wtf/books/the-dip">The Dip</a></p>
<hr>
<h3 id="vilify">vilify</h3>
<p>speak or write about in an abusively disparaging manner.</p>
<p><em>The next time you&#39;re tempted to vilify a particularly obnoxious customer, realize that this failed interaction is the best thing happened to you today.</em></p>
<p><a href="https://altay.wtf/books/the-dip">The Dip</a></p>
<hr>
<h3 id="steep">steep</h3>
<p>almost perpendicular.</p>
<p><em>If you want to be a superstar, then you need to find a field with a steep Dip.</em></p>
<p><a href="https://altay.wtf/books/the-dip">The Dip</a></p>
<hr>
<h3 id="blithely">blithely</h3>
<p>in a happy or carefree manner.</p>
<p><em>Optimistic entrepreneurs and employees who blithely wander into a serious business...</em></p>
<p><a href="https://altay.wtf/books/the-dip">The Dip</a></p>
<hr>
<h3 id="afflict">afflict</h3>
<p>cause pain or trouble.</p>
<p><em>This malady doesn&#39;t afflict just entrepreneurs.</em></p>
<p><a href="https://altay.wtf/books/the-dip">The Dip</a></p>
<hr>
<h3 id="malady">malady</h3>
<p>a serious problem, disease or ailment.</p>
<p><em>This malady doesn&#39;t afflict just entrepreneurs.</em></p>
<p><a href="https://altay.wtf/books/the-dip">The Dip</a></p>
<hr>
<h3 id="vividly">vividly</h3>
<p>in a way that produces powerful feelings or strong, clear images in the mind.</p>
<p><em>People recall negative experiences more vividly than positive ones</em></p>
<p><a href="https://altay.wtf/books/laws-of-ux">Laws of UX</a></p>
<hr>
<h3 id="inherent">inherent</h3>
<p>existing in something as an essential, permanent or characteristic attribute.</p>
<p><em>My product has an inherent complexity that cannot be reduced.</em></p>
<p><a href="https://altay.wtf/books/laws-of-ux">Laws of UX</a></p>
<hr>
<h3 id="instill">instill</h3>
<p>gradually but firmly establish (an idea or attitude) in a person&#39;s mind.</p>
<p><em>Instill a sense of trust.</em></p>
<p><a href="https://altay.wtf/books/laws-of-ux">Laws of UX</a></p>
<hr>
<h3 id="glimpse">glimpse</h3>
<p>a momentary or partial view.</p>
<p><em>There are studies that provide a glimpse into fundamentals of behavior shaping.</em></p>
<p><a href="https://altay.wtf/books/laws-of-ux">Laws of UX</a></p>
<hr>
<h3 id="truism">truism</h3>
<p>a statement that obviously true and says nothing new or interesting.</p>
<p><em>Good design principles are not truisms.</em></p>
<p><a href="https://altay.wtf/books/laws-of-ux">Laws of UX</a></p>
<hr>
<h3 id="heretical">heretical</h3>
<p>comes from <strong>heresy:</strong> belief or opinion contrary to orthodox religious (especially Christian) doctrine.</p>
<p><em>Yes, I know it&#39;s heretical, but I&#39;m advocating quitting.</em></p>
<p><a href="https://altay.wtf/books/the-dip">The Dip</a></p>
<hr>
<h3 id="frantically">frantically</h3>
<p>in a hurried, excited, or disorganized manner.</p>
<p><em>If you aren&#39;t frantically underlining, highlighting or taking notes as you read each chapter, I have not achieved my goals for this book.</em></p>
<p><a href="https://altay.wtf/books/start-small-stay-small">Start Small Stay Small</a></p>
<hr>
<h3 id="chasm">chasm</h3>
<p>a profound difference between people, viewpoints, feelings, etc.</p>
<p><em>The chasm between developer and entrepreneur.</em></p>
<p><a href="https://altay.wtf/books/start-small-stay-small">Start Small Stay Small</a></p>
<hr>
<h3 id="behemoth">behemoth</h3>
<p>a huge or monstrous creature.</p>
<p><em>Behemoth if-else expression.</em></p>
<p><a href="https://altay.wtf/books/programming-elm">Programming Elm</a></p>
<hr>
<h3 id="obscure">obscure</h3>
<p>not discovered or known.</p>
<hr>
<h3 id="inscrutable">inscrutable</h3>
<p>impossible to understand or interpret.</p>
<p><em>Inscrutable cable-box...</em></p>
<hr>
<h3 id="disdain">disdain</h3>
<p>unworthy of consideration or respect.</p>
<p><em>Maybe because of quick success, Dreyfuss viewed his work with a mix of pride and disdain.</em></p>
<p><a href="https://altay.wtf/books/user-friendly">User Friendly</a></p>
<hr>
<h3 id="foible">foible</h3>
<p>a minor weakness or eccentricity in someone&#39;s character.</p>
<p><em>Peoples foibles and limitations</em></p>
<p><a href="https://altay.wtf/books/user-friendly">User Friendly</a></p>
<hr>
<h3 id="conundrum">conundrum</h3>
<p>a paradoxical problem.</p>
<p><em>Shed some light on this conundrum.</em></p>
<p><a href="https://altay.wtf/book/utopia-for-realists">Utopia for Realists</a></p>
<hr>
<h3 id="debilitating">debilitating</h3>
<p>tending to weaken</p>
<p><em>debilitating impact</em></p>
<p><a href="https://altay.wtf/book/utopia-for-realists">Utopia for Realists</a></p>
<hr>
<h3 id="bemuse">bemuse</h3>
<p>puzzle, confuse</p>
<p><em>Norman&#39;s books adopt an abiding tone of bemusement.</em></p>
<p><a href="https://altay.wtf/books/user-friendly">User Friendly</a></p>
<hr>
<h3 id="meticulous">meticulous</h3>
<p>showing great attention to detail.</p>
<p><em>Barbaric was always a meticulous planner.</em></p>
<p><a href="https://altay.wtf/books/user-friendly">User Friendly</a></p>
<hr>
<h3 id="chore">chore</h3>
<p>a routine task. household, etc.</p>
<p><em>You might find checking your email to be a chore, while social media feel like a leisure.</em></p>
<hr>
<h3 id="hapless">hapless</h3>
<p>unfortunate person, thing, someone.</p>
<p><em>An hapless employee sent a nuclear missile warning.</em></p>
<hr>
<h3 id="voracious">voracious</h3>
<p>having a very eager approach to an activity.</p>
<p><em>Voracious social media users.</em></p>
<hr>
<h3 id="resemble">resemble</h3>
<p>look like.</p>
<p><em>Some people resemble their dogs.</em></p>
<hr>
<h3 id="abhor">abhor</h3>
<p>regard with disgust, hatred</p>
<hr>
<h3 id="ostentation">ostentation</h3>
<p>pretentious and vulgar display of wealth.</p>
<p><em>She abhorred ostentation.</em></p>
<p><a href="https://altay.wtf/books/user-friendly">User Friendly</a></p>
<hr>
<h3 id="aversion">aversion</h3>
<p>a strong dislike.</p>
<hr>
<h3 id="divulge">divulge</h3>
<p>make sensitive information known.</p>
<p><em>But while apps may need this information to run their services effectively, they may also profit from the data users divulge.</em></p>
<p><a href="https://themarkup.org/ask-the-markup/2020/11/12/how-private-is-my-pay-app">The Markup: How Private is My Pay App</a></p>
<hr>
<h3 id="impromptu">impromptu</h3>
<p>without being planned, organized, or rehearsed.</p>
<p><em>Email is an impromptu medium, not conductive to slowing down or looking back.</em></p>
<p><a href="https://altay.wtf/books/on-writing-well">On Writing Well</a></p>
<hr>
<h3 id="cajole">cajole</h3>
<p>to persuade.</p>
<p><em>It must cajole them with freshness.</em></p>
<p><a href="https://altay.wtf/books/on-writing-well">On Writing Well</a></p>
<hr>
<h3 id="bleak">bleak</h3>
<p>not hopeful or encouraging.</p>
<p><em>I struggled to find meaning in their bleak existence.</em></p>
<p><a href="https://altay.wtf/books/bird-by-bird">Bird by Bird</a></p>
<hr>
<h3 id="ectoplasm">ectoplasm</h3>
<p>viscous, clear outer layer of the cytoplasm in amoeboid cells.</p>
<p><em>What holds the ectoplasm together –what are your routines and beliefs?</em></p>
<p><a href="https://altay.wtf/books/bird-by-bird">Bird by Bird</a></p>
<hr>
<h3 id="excruciating">excruciating</h3>
<p>intensely painful (physical pain).</p>
<p>mentally agonizing, embarrassing, awkward or tedious (abstract).</p>
<hr>
<h3 id="poignant">poignant</h3>
<p>evoking a keen sense of sadness or regret.</p>
<p><em>A poignant reminder of the passing of time.</em></p>
<hr>
<h3 id="voyeurism">voyeur(ism)</h3>
<p>a person who enjoys seeing the pain or distress of the others.</p>
<p><em>And we have all the voyeurism because the characters (whom we&#39;re making talk in our fictions) don&#39;t know we&#39;re listening.</em></p>
<p><a href="https://altay.wtf/books/bird-by-bird">Bird by Bird</a></p>
<hr>
<h3 id="proliferation">proliferation</h3>
<p>rapid increase in the amount of something.</p>
<p><em>Given the proliferation of quatrefoil, he may been onto something.</em></p>
<p><a href="https://altay.wtf/books/the-99-percent-invisible-city">The 99% Invisible City</a></p>
<hr>
<h3 id="ubiquitous">ubiquitous</h3>
<p>present, appearing, or found everywhere.</p>
<p><a href="https://altay.wtf/books/the-99-percent-invisible-city">The 99% Invisible City</a></p>
<hr>
<h3 id="coveted">coveted</h3>
<p>greatly desired or envied.</p>
<p><em>Whatever the reasons, the simplified quatrefoil has indeed become ubiquitous and coveted, a persisted symbol of luxury and high style.</em></p>
<p><a href="https://altay.wtf/books/the-99-percent-invisible-city">The 99% Invisible City</a></p>
<hr>
<h3 id="eschew">eschew</h3>
<p>deliberately avoid using.</p>
<p><em>Over the last two decades, all major companies have publicly eschewed narrow self-interest and embraced social purpose.</em></p>
<p><a href="https://altay.wtf/books/the-new-corporation">The New Corporation</a></p>
<hr>
<h3 id="promulgated">promulgated</h3>
<p>promote or make widely known (an idea or a cause)</p>
<p><em>The importance of protecting workers and promulgated legions of rules – like no coffee cups without lids.</em></p>
<p><a href="https://altay.wtf/books/the-new-corporation">The New Corporation</a></p>
<hr>
<h3 id="reassurance">reassurance</h3>
<p>the action of removing someones doubts and fears</p>
<p><em>Reassurance is futile.</em></p>
<p><a href="https://altay.wtf/books/the-practice">The Practice</a></p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using things that are solving my problems]]></title>
        <id>https://altay.wtf/notes/using-things</id>
        <link href="https://altay.wtf/notes/using-things"/>
        <updated>2020-11-16T19:32:42.000Z</updated>
        <summary type="html"><![CDATA[buyprimebenefits buyprimebenefits]]></summary>
        <content type="html"><![CDATA[<p>I enjoy using things that are solving my problems.</p>
<p>Some of them solving those problems so good that I want to take notes. The primary aim is to express my gratitude, and a nice-to-have one is to keep them in mind while building things.</p>
<p>I drink coffee everyday, and developed an interest in how beans are packaged. Here&#39;s <a href="https://altay.wtf/notes/coffee-bean-package-perfect">a perfect one</a>, and<br><a href="https://altay.wtf/notes/coffee-bean-package-not-perfect">an imperfect one.</a></p>
<p>I buy things online, and astonished by <a href="https://altay.wtf/notes/how-to-design-a-checkout-experience">Shopify&#39;s checkout experience</a>.</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Manipulation]]></title>
        <id>https://altay.wtf/notes/manipulation</id>
        <link href="https://altay.wtf/notes/manipulation"/>
        <updated>2020-11-15T19:56:29.000Z</updated>
        <summary type="html"><![CDATA[A definition of manipulation from Seth Godin.]]></summary>
        <content type="html"><![CDATA[<p>A definition of manipulation from Seth Godin.</p>
<p>If people know what you already know &mdash;about your product, your service, and your methods&mdash; would they still be eager to buy from you? (or vote for you 🙂)</p>
<p>If we use leverage and pressure to get someone to make a short-term decision that they will regret in the long run, we&#39;ve manipulated them.</p>
<p>No regrets, no manipulation.</p>
<h3 id="references">References</h3>
<ul>
<li>Seth Godin, &quot;Work That Matters.&quot; Interview by Kieran O&#39;Hare. Offscreen Mag 23rd Issue</li>
</ul>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Blur-up image loading with next/image]]></title>
        <id>https://altay.wtf/notes/blur-up-image-loading-with-next</id>
        <link href="https://altay.wtf/notes/blur-up-image-loading-with-next"/>
        <updated>2020-11-13T22:41:11.000Z</updated>
        <summary type="html"><![CDATA[aka the magic thing Medium does with the images.]]></summary>
        <content type="html"><![CDATA[<p>I wanted to implement Medium&#39;s <a href="https://github.com/evenchange4/react-progressive-bg-image">progressive image loading technique</a> with Next.js&#39;s new <code>next/image</code> component. It doesn&#39;t pass the image dimensions, not as intuitive as gatsby.</p>
<p>Found a way to make it work for article images and book covers. Using <a href="https://github.com/joe-bell/next-placeholder">next-placeholder</a> to get <code>blurhash</code> during the build time, then passing it to <a href="https://blurha.sh">blurhash</a>.</p>
<p>Unfortunately non-meta images are still lacking this feature. Generating a map of blurhashes of each local image could be a solution. It&#39;s a bit ugly though.</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to design a checkout experience]]></title>
        <id>https://altay.wtf/notes/how-to-design-a-checkout-experience</id>
        <link href="https://altay.wtf/notes/how-to-design-a-checkout-experience"/>
        <updated>2020-11-11T20:33:52.000Z</updated>
        <summary type="html"><![CDATA[Just do whatever Shopify does.]]></summary>
        <content type="html"><![CDATA[<p>Just do whatever Shopify does.</p>
<p>I&#39;m astonished by the swiftness of their checkout experience.<br>It&#39;s so effortless that makes me worry about something went wrong.</p>
<p>One click, a fingerprint scan, done. Didn&#39;t need to type anything. Everything with one hand.</p>
<p><img src="https://altay.wtf/images/notes/shopify-checkout-gg.gif" alt="Shopify two taps"></p>
<p>It&#39;s as good as the <em>I don&#39;t need to take my wallet off</em> solution for coffee shops mentioned in <a href="https://altay.wtf/books/the-best-interface-is-no-interface">The Best Interface Is No Interface</a>.</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Simple questions]]></title>
        <id>https://altay.wtf/notes/simple-questions</id>
        <link href="https://altay.wtf/notes/simple-questions"/>
        <updated>2020-11-10T20:02:22.000Z</updated>
        <summary type="html"><![CDATA[:thinking-face:]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>You and I have the same 24 hours. Is this how you&#39;re going to spend yours?</p>
<p>&mdash; James Altucher (<a href="https://altay.wtf/books/choose-yourself">Choose Yourself</a>)</p>
</blockquote>
<p>That&#39;s a memorable example that summarizes the whole book.<br>It reveals his entire philosophy, which is great. It guarantees James will make you question how you make use of your time in his next book. And he certainly does in <a href="https://altay.wtf/books/reinvent-yourself">Reinvent Yourself</a>.</p>
<p>Once the people in front of you understand what you are trying to tell, the rest is a rollercoaster. Surround it with stories, quotes, real-life experiences.</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to not redesign your app icons]]></title>
        <id>https://altay.wtf/notes/how-to-not-redesign-a-logo</id>
        <link href="https://altay.wtf/notes/how-to-not-redesign-a-logo"/>
        <updated>2020-11-09T21:12:40.000Z</updated>
        <summary type="html"><![CDATA[Notorious GSuite example]]></summary>
        <content type="html"><![CDATA[<p>Google&#39;s new app icons for GSuite look pretty bad.<br>Because they are almost indistinguishable from each other.</p>
<p><img src="https://altay.wtf/images/notes/google-gsuite-icons.png" alt=""></p>
<p>Apparently they wanted to use all its colors on every icon.<br>That might be a legit idea for the brand consistency.<br>But if you have all the GSuite apps in the same screen, good luck with your astigmatism.</p>
<p>I wonder how they evaluated the accessibility aspect.</p>
<p>Microsoft uses a distinct color for all the office apps, so you can tell the difference with no hustle.</p>
<p><img src="https://altay.wtf/images/notes/microsoft-office-icons.png" alt=""></p>
<p>Putting a frame into a frame is another aesthetic problem.<br>All the app icons are already appearing as frames in the screen.</p>
<p><img src="https://altay.wtf/images/notes/google-calendar-logo-frame-within-a-frame.png" alt=""></p>
<h3 id="references">References</h3>
<ul>
<li><p><a href="https://medium.com/design-bootcamp/why-googles-new-app-icons-are-pretty-bad-10f1ec40ab04">https://medium.com/design-bootcamp/why-googles-new-app-icons-are-pretty-bad-10f1ec40ab04</a></p>
</li>
<li><p><a href="https://twitter.com/danidonovan/status/1322356167063031814">https://twitter.com/danidonovan/status/1322356167063031814</a></p>
</li>
</ul>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[An imperfect coffee bean package]]></title>
        <id>https://altay.wtf/notes/coffee-bean-package-not-perfect</id>
        <link href="https://altay.wtf/notes/coffee-bean-package-not-perfect"/>
        <updated>2020-11-09T20:09:28.000Z</updated>
        <content type="html"><![CDATA[<p>This is from <a href="https://www.instagram.com/bonanzacoffee/">Bonanza.</a></p>
<p>It looks modern and sterile, but not as convenient as <a href="https://altay.wtf/notes/coffee-bean-package-perfect">Oslo&#39;s</a>.</p>
<p>Getting a perfectly filled spoon is hard when it&#39;s running low.<br>It occupies more space due to having a larger volume.</p>
<p><img src="https://altay.wtf/images/notes/coffee-bonanza.jpeg" alt=""></p>
<p>Bonanza also sells <a href="https://shop.bonanzacoffee.de/collections/coffee/products/sasaba-jar">a glass jar</a>, maybe they want people to buy that. It looks like it belongs to my high-school&#39;s chemistry lab. One day we had an accident in there. A student broke a bottle and spilled ammonia to the ground. The whole floor smelt awful for the rest of the week. I remember that ammonia smell whenever I see this brown glass. I also hate pickles and they come in a jar too.</p>
<p>The initial opening of this package can be troublesome.<br>Need to be cautious and patient.</p>
<p><img src="https://altay.wtf/images/notes/coffee-bonanza-nooo.jpeg" alt=""></p>
<p>Not my inherent traits if I haven&#39;t had a coffee yet.</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[A perfect coffee bean package]]></title>
        <id>https://altay.wtf/notes/coffee-bean-package-perfect</id>
        <link href="https://altay.wtf/notes/coffee-bean-package-perfect"/>
        <updated>2020-11-09T18:30:21.000Z</updated>
        <summary type="html"><![CDATA[It tastes great too.]]></summary>
        <content type="html"><![CDATA[<p>This is <em>Ethiopia Koromii</em> from <a href="https://www.instagram.com/oslokaffebar/">Oslo Kaffebar</a>. It has a peachy flavor and my favorite in all aspects.</p>
<p>The package is convenient to use even I&#39;m running low on beans.<br>It&#39;s easy to expand the bag to dip the spoon in.</p>
<p>Black feels premium, and the colorful cover on top adds a joy.<br>That orange circle reminds me of its taste.</p>
<p>They are giving a one cup of coffee for free when you buy beans.<br>Profit. 😉</p>
<p><img src="https://altay.wtf/images/notes/coffee-oslo.jpeg" alt=""></p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Enhancing book notes with metadata]]></title>
        <id>https://altay.wtf/notes/enhancing-book-notes</id>
        <link href="https://altay.wtf/notes/enhancing-book-notes"/>
        <updated>2020-11-09T15:29:40.000Z</updated>
        <summary type="html"><![CDATA[You can read, you can code. So why not?]]></summary>
        <content type="html"><![CDATA[<p>If you like to take notes from the books you read and know a little bit of JavaScript, this may help you.</p>
<p>I&#39;ve been using Apple Notes, Notion, sticky notes, and paper for my notes. They were unorganized and hard to index when needed. I moved all to Markdown, and started publishing on this website.</p>
<p><a href="https://altay.wtf/notes/how-do-I-read">Taking notes is the hard part</a>.<br>Once they are in place, making them look pretty is a joyful task to deal with. That&#39;s what I did while building the book pages, without spending too much effort on details. It took me half-a-day to make it legit enough to share in this post.</p>
<h3 id="adding-front-matter-to-markdown">Adding front-matter to Markdown</h3>
<p>We need some manual labor to do before we get to the acrobatics.</p>
<p>We can use YAML syntax at the beginning of a Markdown file to define the metadata. There&#39;s a library called <code>gray-matter</code> to parse it to JSON so we can use it in the next steps.</p>
<pre><code>---
isbn: &#39;0135957052&#39;
date_read: &#39;2020-08-27&#39;
oneliner: A dead program normally does a lot less damage than a crippled one.
---

## Chapter 1: A Pragmatic Philosophy
...
</code></pre>
<pre><code class="language-ts">import fs from &#39;fs&#39;
import matter from &#39;gray-matter&#39;

type BookNote = {
  content: string
  data: {
    isbn: string
    date_read: string
    oneliner: string
  }
}

const readMarkdownFile = (filePath: string) =&gt; {
  const file = fs.readFileSync(filePath, &#39;utf-8&#39;)
  const { data, content } = matter(file)
  return { data, content } as BookNote
}
</code></pre>
<p>It&#39;s easy to retrieve a lot of information and generate specific meta images by using the ISBN. That is the only identifier we need for the rest. Amazon usually uses ISBN-10 as a path parameter for the product pages.</p>
<p><img src="https://altay.wtf/images/notes/enhancing-book-notes/amazon-isbn.png" alt="Amazon Product Page"></p>
<h3 id="using-google-books-api-for-metadata">Using Google Books API for metadata</h3>
<p>If we only need essential information like title, authors, and cover image, we can proceed with the <a href="https://developers.google.com/books/">Google Books API</a>.<br>Not sure if it&#39;s a bug or feature, but some endpoints don&#39;t need authentication. Obtaining an API key is not that hard as well. We just need to create a Google account and register a new app to use the Books API.</p>
<p>Google Books has a pretty simple query endpoint that we can pass the ISBN and API keys as parameters. Unfortunately, thumbnail images are low-resolution. It looks a bit ugly, but doubling the dimensions during the transformation can be a solution.</p>
<pre><code class="language-ts">type BookData = {
  isbn: string
  title: string
  authors: string[]
  coverImageURL: string
}

type GoogleBooksQueryResult = {
  totalItems: number
  items: Array&lt;{
    volumeInfo: {
      title: string
      authors: string[]
      imageLinks: {
        thumbnail: string
      }
    }
  }&gt;
}

const decodeGoogleBooksResponse = (json: GoogleBooksQueryResult): BookData =&gt; ({
  isbn,
  title: json.items[0].volumeInfo.title,
  authors: json.items[0].volumeInfo.authors,
  coverImageURL: json.items[0].volumeInfo.imageLinks.thumbnail,
})

const BASE_URL = `https://www.googleapis.com/books/v1/volumes`

const fetchBookMetadata = async (isbn: string): Promise&lt;BookData&gt; =&gt; {
  const url = `${BASE_URL}?q=isbn:${isbn}&amp;key=${GOOGLE_BOOKS_API_KEY}`
  const response = await fetch(url)
  const json = await response.json()
  return decodeGoogleBooksResponse(json)
}
</code></pre>
<h3 id="creating-a-meta-image-for-the-book-page">Creating a meta image for the Book page</h3>
<p>Now that we have the least relevant information to render a book page, we can take some time to prettify the meta tags. Here&#39;s how related services render the meta images related to book pages.</p>
<p><img src="https://altay.wtf/images/notes/enhancing-book-notes/meta-amazon-google.png" alt="Amazon and Google Book&#39;s meta image"></p>
<p>Alright, that is doable with what we have.</p>
<p>In my experience, the easiest way to generate a custom image in the NodeJS context is to use a canvas library. The easiest to use I found is, hold your breath, called <code>canvas</code>. I also use <code>image-size</code> to gather the <code>width</code> and <code>height</code> properties.</p>
<p>Here&#39;s the flow:</p>
<ul>
<li>Fetch the metadata from Google Books API.</li>
<li>Fetch the thumbnail image as blob.</li>
<li>Extract the width and height properties.</li>
<li>Create a canvas with the size of the OpenGraph image.</li>
<li>Place the thumbnail in the middle, double the size to make it look bigger.</li>
<li>Save the generated image to somewhere.</li>
<li>Return the URL.</li>
</ul>
<pre><code class="language-ts">import { createCanvas, loadImage } from &#39;canvas&#39;
import fetch from &#39;node-fetch&#39;
import imageSize from &#39;image-size&#39;
import fs from &#39;fs&#39;

type ImageData = {
  buffer: Buffer
  width: number
  height: number
}

const getImageDataFromBuffer = (buffer: Buffer): ImageData =&gt; {
  const { width, height } = imageSize(buffer)

  if (!width || !height) {
    throw new Error(&#39;Could not get image data&#39;)
  }

  return { buffer, width, height }
}

const getImageData = async (url: string): Promise&lt;ImageData&gt; =&gt; {
  const response = await fetch(url)
  const buffer = await response.buffer()
  return getImageDataFromBuffer(buffer)
}

const META_IMAGE_WIDTH = 1200
const META_IMAGE_HEIGHT = 628
const META_IMAGE_BG_FILL_COLOR = &#39;#050505&#39;

const createCanvasForMetaImage = () =&gt; {
  const canvas = createCanvas(META_IMAGE_WIDTH, META_IMAGE_HEIGHT)
  const context = canvas.getContext(&#39;2d&#39;)
  context.fillStyle = META_IMAGE_BG_FILL_COLOR
  context.fillRect(0, 0, META_IMAGE_WIDTH, META_IMAGE_HEIGHT)
  return { canvas, context }
}

const generateMetaImageForBook = (book: BookData) =&gt; {
  const imagePath = `../public/images/${book.isbn}.png`
  const imageData = await getImageData(book.coverImageURL)
  const image = await loadImage(imageData.buffer)

  const coordinates = {
    x: (META_IMAGE_WIDTH - imageData.Width) / 2,
    y: (META_IMAGE_HEIGHT - imageData.Height) / 2,
  }

  const { canvas, context } = createCanvasForMetaImage()
  context.drawImage(image, coordinates.x, coordinates.y, imageData.width, imageData.height)

  fs.writeFileSync(imagePath, canvas.toBuffer(&#39;image/png&#39;))
  return imagePath
}
</code></pre>
<p>Since it&#39;s a Next.js app, I prefer to save it to the filesystem. An alternative approach could be uploading to a CDN.</p>
<p>After injecting the meta images to the book pages, <a href="https://metatags.io">metatags.io</a> is a great tool to verify how they look.</p>
<p><img src="https://altay.wtf/images/notes/enhancing-book-notes/meta-screenshot.png" alt="Our generated image"></p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Transparent business]]></title>
        <id>https://altay.wtf/notes/my-utopia</id>
        <link href="https://altay.wtf/notes/my-utopia"/>
        <updated>2020-11-08T15:37:20.000Z</updated>
        <summary type="html"><![CDATA[I want my own utopia.]]></summary>
        <content type="html"><![CDATA[<p>If I start a company one day, I&#39;d love it to be as transparent as possible. Not only internal, also for the audience. It&#39;s a great way of establishing trust. Leaves no room manipulation. Shows that you are a human. Boosts my sympathy for small businesses.</p>
<p>Developing in the open is a way to do that:</p>
<ul>
<li><a href="https://blot.im">blot</a></li>
</ul>
<p>Being financially open is another way:</p>
<ul>
<li><a href="https://small-tech.org/fund-us/">small-tech, sustainability</a></li>
<li><a href="https://www.notion.so/Running-Costs-f29729ded5494272947f656440967cbf">buttondown, running costs</a></li>
<li><a href="https://mailbrew.com/open">mailbrew.com/open</a></li>
</ul>
<p>Doing both is awesome:</p>
<ul>
<li><a href="https://plausible.io/about">plausible</a></li>
</ul>
<h3 id="how-i-would-imagine-my-utopia">How I would imagine my utopia</h3>
<p>You will know how much money we need to survive and how much more we need to divide more time to improve. You can make one-time or recurring donations. We appreciate every dime, so everyone will know you are one of the Patreons who make this possible.</p>
<p>Source code, design discussions, roadmap... Everything we do is open to members (or even public). We appreciate every effort. If you&#39;re willing to contribute, we will make sure to compensate. You will also get a shiny contributor badge and SWAG.</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[How do I read a book]]></title>
        <id>https://altay.wtf/notes/how-do-I-read</id>
        <link href="https://altay.wtf/notes/how-do-I-read"/>
        <updated>2020-11-05T22:37:23.000Z</updated>
        <summary type="html"><![CDATA[It's more pleasant than playing 300 games of League of Legends during the lockdown.]]></summary>
        <content type="html"><![CDATA[<p>I&#39;m soon to become twenty-seven, and I complain almost about everything. One of my recent realizations is having no idea how to read a book. I had many skilled teachers, leads, mentors, but none of them taught me anything about that. I suppose I didn&#39;t ask the right questions, and they were as clueless as me. I want to believe it&#39;s about <em>the system</em> and people in charge who don&#39;t even know I am alive.</p>
<p>Well, hello? 👋</p>
<h3 id="the-effortless-aphorisms">The Effortless Aphorisms</h3>
<p>I try to solve my problems by attempting radical changes to trigger a chain of reactions. Everyone has a limit on the changes they can make at a time. But we never learn unless we push for it. Starting to do something from nothing wouldn&#39;t count as a revolution. It&#39;s a reformation of how we live.</p>
<p>I tried to start a new way of doing things when I moved to a new country two years ago. I began to walk around the neighborhood while listening to podcasts like <em>The Knowledge Project</em> and <em>Tim Ferriss Show</em>. I still recognize the cobblestones I was stepping while getting astonished by the wisdom of people like <em>Naval Ravikant</em>, <em>Seth Godin</em>, and <em>Derek Sivers</em>. Every sentence that came out from their mouth was like effortless aphorisms.</p>
<p>Wow! How do they know this much stuff? It must be something related to prosperity! Or the opposite.</p>
<p>Their most inherent trait is being uttermost aware of <a href="https://altay.wtf/notes/why">why they are doing what they are doing</a>. Do I know that? I guess no; that&#39;s what I should get to find out first. How can I get better at what I am doing? Well, I suppose I need to know what&#39;s happening in the world and why I am here.</p>
<h3 id="why-do-i-read">Why do I read</h3>
<p>Like most decent accomplishments, wisdom doesn&#39;t arise overnight. As you can predict, another trait of the names mentioned is reading. They are quite skilled at learning and making use of the things they capture along the way. Combined with many other ingredients, they become more qualified and improve the execution factor.</p>
<p>As a start, I took several topics to get better and use reconnaissance along the way.</p>
<ul>
<li><strong>Self-help/productivity:</strong> to keep the lights on.</li>
<li><strong>Creativity</strong>: to build things and solve problems of people like me.</li>
<li><strong>Product/service design</strong>: to understand both people and issues.</li>
<li><strong>Software engineering</strong>: a great form of leverage and absorbs all the points above.</li>
</ul>
<p>During the past two years, I tried to read every day and take notes with a roughly 60% success rate. That made me read around <a href="https://altay.wtf/books">50 books</a> and learn many things, which I attempted to integrate into my life. Some worked well; many I haven&#39;t figured out how to use.</p>
<p>I&#39;m at the beginning and feeling like there won&#39;t be any spot for me to say &quot;halfway there.&quot; No matter what, I rejoice in the process. It&#39;s more pleasant than playing 300 games of League of Legends with a bunch of 12-year-olds. I also did that during the quarantine and lost half of them.</p>
<p>I appreciate the existence of more people like me. A good nudge to get out of bed is to find a way to help them solve their problems.</p>
<p>Here we go.</p>
<h3 id="this-is-my-original-storino-please-no-copy-pasterino">&quot;This is my original storino, please no copy pasterino.&quot;</h3>
<p>The note-taking ceremony started by underlining everything that made sense to me. I was new to the literature, that means a lot of highlights. After finishing a chapter, I was either copy-pasting highlights from the Kindle to a document or rewriting what the book says.</p>
<p>In summary, that&#39;s how the process looked like:</p>
<ol>
<li> Start the book, read a chapter, highlight/bookmark.</li>
<li> Carryover the highlights into a digital document.</li>
</ol>
<p><em>The next day</em></p>
<ol start="3">
<li> Skim the notes from the previous chapter.</li>
<li> Read the next chapter.</li>
</ol>
<p><em>Following days</em></p>
<ol start="5">
<li> Repeat 4 and 5 until I get bored in the loop at some point.</li>
<li> Stop taking notes in a place where things got intense.</li>
<li> Finish the book.</li>
<li> Now I have to go through it again because the note-taking part left behind.</li>
</ol>
<p>Learning through repetition is a good idea. But that was a bit dull and easy to give up.</p>
<p>The best-case outcome of this approach:</p>
<ul>
<li>Having a reference for the first X percent of the book.</li>
<li>Bunch of left-alone highlights waiting for someone to carry them over.</li>
<li>Few ideas of my own about the topic.</li>
<li>An example of this method, from <em><a href="https://altay.wtf/books/company-of-one">Company of One</a></em></li>
</ul>
<p>That was a positive start for awareness, yet not practical.</p>
<h3 id="do-you-read-me">&quot;Do you read me?&quot;</h3>
<p>Like the beginning of this story, it didn&#39;t take long to conclude that my method was inefficient. I could understand what I&#39;m reading by the time I&#39;m reading. Yet, little remnants after a couple of months. The time-sheets were filling up, but my notes were unavailing.</p>
<p>They lacked two things: <strong>interpretation</strong> and <strong>internalization</strong>.</p>
<p>Then I decided to try more concrete approaches.</p>
<h4 id="shorter-notes-with-my-own-words">Shorter notes, with my own words</h4>
<blockquote>
<p>Trying to retrieve an answer that doesn’t yet exist in your mind is like laying down a road leading to a building that hasn’t been constructed yet.</p>
<p>&mdash; <strong>Scott Young</strong> (Ultralearning)</p>
</blockquote>
<p>We memorize our actions better compared to what we perceive.<br>Connecting the dots is much easier if we are the one who place them.<br>So the intention is to build a simple mental modal of what each chapter says.</p>
<p>So here&#39;s what I&#39;m trying to do:</p>
<ol>
<li> Take byte-sized notes while reading.</li>
<li> Chunk by topic.</li>
<li> <em>Marinate</em> them somewhere visible like in a wall or notebook.</li>
<li> After several weeks, carry things over to text documents while skimming the book.</li>
<li> Publish notes in this website.</li>
</ol>
<p>To bring joy to the process, I ditched the keyboard-driven documentation. Now I have an iPad with Apple Pencil to feel more papery.</p>
<p>Here&#39;s an example from <a href="https://altay.wtf/books/make-time"><em>Make Time</em></a>.</p>
<p><img src="https://altay.wtf/images/books/make-time/make-time-08.jpg" alt="Random page from Make Time"></p>
<p>This approach works better. Still, sometimes I get side-tracked by the rabbit hole called the internet. The other strategy is going all-in on paper. Sticky notes are great for logistics.</p>
<p>Here&#39;s an example from <em>User Friendly</em>, which I&#39;m currently reading.</p>
<p><img src="https://altay.wtf/images/notes/how-do-I-read/how-do-I-read-post-it.jpg" alt="Sticky notes from User Friendly"></p>
<p>Besides that, I started tagging the highlights based on their topic. It&#39;s helpful while taking action, which is a learning from another book: <em>How to Take Smart Notes</em>.</p>
<p><img src="https://altay.wtf/images/notes/how-do-I-read/how-do-I-read-tags.jpg" alt="Tags"></p>
<h4 id="listen-to-what-other-readers-say">Listen to what other readers say</h4>
<p>The social aspect is sabotaged by the pandemic, and there&#39;s not much to do about it. I read online discussions and listen to podcast episodes related to the books I&#39;m reading. It also helps to discover new mediums to get recommendations.</p>
<p>Those try-outs are making an impact. I remember and think more about what I read and what to do with them. Yet, I haven&#39;t done much yet. That brings the next adversity: awareness of insufficient use.</p>
<h3 id="taking-action">Taking action</h3>
<p>Now we arrived at a decent spot to sneak in this famous quote.</p>
<blockquote>
<p>If I had eight hours to chop down a tree, I&#39;d spend six hours sharpening my axe.</p>
<p>&mdash; <strong>Abraham Lincoln</strong></p>
</blockquote>
<p>Do you remember what those <em>heroic</em> people I bowed at the beginning had in common?</p>
<p>Good, now it&#39;s our turn. The most effective internalization happens when we craft tangible things with what we learn. We have to make use of them. There&#39;s no other way than taking action.</p>
<p>A great book would make us want to do something, and there are many out there.</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jakob's Law]]></title>
        <id>https://altay.wtf/notes/jakobs-law</id>
        <link href="https://altay.wtf/notes/jakobs-law"/>
        <updated>2020-11-05T19:50:22.000Z</updated>
        <summary type="html"><![CDATA[Don't make people think. Please.]]></summary>
        <content type="html"><![CDATA[<p>Users spend most of their time on other sites, and they prefer your site to work the same way as all the other sites they already know.</p>
<ul>
<li>Users will transfer expectations they have built around one familiar product to another that appears similar.</li>
<li>Leveraging existing mental models would help us to create superior experiences that would flatten the learning curve of our service.</li>
<li>When introducing re-designs, prefer gradual transitions between the versions. Allow people to keep using the old version so they can try and adapt without completely leaving the product.</li>
</ul>
<h3 id="references">References</h3>
<ul>
<li><a href="https://altay.wtf/books/laws-of-ux">Laws of UX</a></li>
</ul>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tutanota's non-intuitive email link]]></title>
        <id>https://altay.wtf/notes/tutanota-email-link</id>
        <link href="https://altay.wtf/notes/tutanota-email-link"/>
        <updated>2020-11-05T19:50:22.000Z</updated>
        <summary type="html"><![CDATA[Time to read Laws of UX.]]></summary>
        <content type="html"><![CDATA[<p><img src="https://altay.wtf/images/notes/tutanota-email-link.mp4" alt=""></p>
<p>I wanted to copy this mail address to sign-up for another newsletter.</p>
<p>I assumed they&#39;re rendering emails with</p>
<pre><code class="language-html">&lt;a href=&quot;mailto:a+vanschneider@aydemir.io&quot;&gt;a+vanschneider@aydemir.io&lt;/a&gt;
</code></pre>
<p>A direct click to that link would open <code>Mail.app</code>, which was not my aim.</p>
<ul>
<li>I tried to select the text, didn&#39;t work.</li>
<li>I tried to right click the <code>a</code> so I could select <code>copy link</code> from the context menu, didn&#39;t work.</li>
<li>As the last hope, I left clicked to understand what&#39;s going on...</li>
</ul>
<p>It turns out that&#39;s a <code>button</code>, not an <code>anchor</code> tag!</p>
<p>Their consideration is thoughtful, but <a href="https://altay.wtf/notes/jakobs-law">that&#39;s not how the links work.</a> 😐</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why we are doing what we are doing]]></title>
        <id>https://altay.wtf/notes/why</id>
        <link href="https://altay.wtf/notes/why"/>
        <updated>2020-11-05T14:24:56.000Z</updated>
        <summary type="html"><![CDATA[Now I got you.]]></summary>
        <content type="html"><![CDATA[<p><a href="https://altay.wtf/notes/simple-questions">Simple questions</a> have painful answers, and this one above is a gem. I don&#39;t recall where I heard it for the first time. I can see the reflections in almost everything I read. It instills a never-ending skepticism. Suddenly there is an infinite-scrolling to-do list.</p>
<p>I keen on repeatedly asking those simple questions to myself. They create tension. Sometimes too much. The only way to relieve this tension is to trigger a forward motion. Otherwise, they eat me alive. 👹</p>
<p>Speaking of being eaten alive, <a href="https://altay.wtf/notes/the-vampire-test">the vampire test</a> is a great way for eliminating things that we can&#39;t have a meaningful explanation.</p>
<p>Taking a step back and thinking about how do we decide what to do and what are our values are accurate places to kickstart the interrogation.</p>
<p>Sometimes we find ourselves in messy situations that feels like we lost the control. How is that even possible? What we don&#39;t know is that <a href="https://altay.wtf/notes/self-control">self-control is an illusion.</a></p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Joe Armstrong on error handling]]></title>
        <id>https://altay.wtf/notes/joe-armstrong-error-handling</id>
        <link href="https://altay.wtf/notes/joe-armstrong-error-handling"/>
        <updated>2020-11-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[For your next engineering couch.]]></summary>
        <content type="html"><![CDATA[<p>Notes from his <a href="https://www.youtube.com/watch?v=TTM_b7EJg5E">GOTO 2018 talk.</a></p>
<h4 id="what-is-an-error">What is an error?</h4>
<p>A deviation of the program.</p>
<h4 id="who-finds-the-error">Who finds the error?</h4>
<ul>
<li>Program (runtime)</li>
<li>Programmer</li>
<li>Compiler</li>
</ul>
<h4 id="what-should-the-runtime-do">What should the runtime do?</h4>
<ul>
<li>Example runtime errors: arithmetic, system, null pointer.</li>
<li>Crash immediately and assume somebody else will fix the problem.</li>
<li>It&#39;s basically like rebooting the system.</li>
</ul>
<h4 id="what-should-the-programmer-do">What should the programmer do?</h4>
<p>Log it to a stable storage and crash immediately.</p>
<p>Crashing will result end of losing everything for single threaded languages. Talks about concurrent programming.</p>
<h4 id="where-do-errors-come-from">Where do errors come from?</h4>
<ul>
<li>Silent errors, doesn&#39;t cause program to crash but produces wrong result.</li>
<li>Programmers may not know how to solve because they don&#39;t know there will be an error.</li>
</ul>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Leveraging dynamic imports to make Lighthouse happier]]></title>
        <id>https://altay.wtf/notes/happier-lighthouse</id>
        <link href="https://altay.wtf/notes/happier-lighthouse"/>
        <updated>2020-11-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Using a 450KB library to render text was not my brightest decision.]]></summary>
        <content type="html"><![CDATA[<p>I&#39;m building this website with <a href="https://nextjs.org">Next.js</a> and charmed by the delightful developer experience we get when it&#39;s combined with <a href="https://vercel.com/">Vercel</a>.</p>
<p>In addition to eliminating the friction, Vercel also provides <a href="https://nextjs.org/analytics">analytics</a> and <a href="https://vercel.com/integrations/lighthouse">Lighthouse integration</a> to monitor how my website is performing when it comes to vital metrics for the user experience.</p>
<p>And that&#39;s precisely what I did right after deploying a bearable version. But the results were not satisfying at all.</p>
<p><img src="https://altay.wtf/images/notes/happier-lighthouse/lighthouse-score-before.png" alt="Lighthouse score before the optimization"></p>
<p>My minimal home page with three lines of text and a handful of links made Lighthouse complain sorely about the performance.</p>
<p>The report is clear, it tells that I&#39;m basically making your computer load and parse a bunch of irrelevant JavaScript.</p>
<p><img src="https://altay.wtf/images/notes/happier-lighthouse/lighthouse-score-before-detail.png" alt="Lighthouse score details, before the optimization"></p>
<blockquote>
<p>I thought that&#39;s an ethos to have if you are building a publishing thingy nowadays, or am I in the wrong <a href="https://altay.wtf/images/notes/happier-lighthouse/medium-110-requests.gif">Medium?</a> 👹👹👹</p>
</blockquote>
<h3 id="finding-out-what-i-am-excessively-loading">Finding out what I am excessively loading</h3>
<p>The report shows which chunk is not utilized.<br>Unfortunately, the code is minified.</p>
<p>I have two choices:</p>
<ul>
<li><p>Be a responsible, clean coder and inspect the source maps by using <a href="https://www.npmjs.com/package/@next/bundle-analyzer">@next/bundle-analyzer</a> to find out what&#39;s wrong.</p>
</li>
<li><p>Remember that&#39;s a fun project, and double the amount of fun with puzzles by guesstimating what it could be.</p>
</li>
</ul>
<p>Proceeding with the latter, I know one thing which doesn&#39;t get minified: <strong>error messages!</strong></p>
<p><img src="https://altay.wtf/images/notes/happier-lighthouse/excessively-loaded-code.png" alt="Digging up the excessively loaded code"></p>
<p>And searching for <code>only one of &#39;allowedTypes&#39; and &#39;disallowedTypes&#39; should be defined</code> in the <code>node_modules</code> is a good next step for approaching to the crux.</p>
<p><img src="https://altay.wtf/images/notes/happier-lighthouse/search-results-for-error-message.png" alt="Search results for the error message."></p>
<p>Then I realize it&#39;s seemingly related to markdown. Now that the scope is narrowed down, it&#39;s time to discover what I&#39;m doing wrong.</p>
<h3 id="how-does-this-website-render-markdown">How does this website render markdown</h3>
<p>I tend to rely on markdown for rendering any kind of content, and using <a href="https://github.com/remarkjs/react-markdown">react-markdown</a> to render raw content to HTML. It has a nice API that allows you to render specific elements by using custom renderers.</p>
<p>I copy/pasted <a href="https://github.com/remarkjs/react-markdown#use-custom-renderers-syntax-highlight">the snippet in docs</a> to render code blocks with <code>react-syntax-highlighter.</code></p>
<p>It looked like this before the refactor:</p>
<pre><code class="language-jsx">// Markdown.jsx
import ReactMarkdown from &#39;react-markdown&#39;
import { Prism } from &#39;react-syntax-highlighter&#39;

const Code = (props) =&gt; &lt;Prism language={props.language}&gt;{props.value}&lt;/Prism&gt;

const Markdown = ({ children }) =&gt; (
  &lt;ReactMarkdown
    renderers={{
      code: Code,
    }}
  &gt;
    {children}
  &lt;/ReactMarkdown&gt;
)

export default Markdown
</code></pre>
<p>That might be a heavy library to load if I&#39;m not planning to render any code blocks since it contains all the parsing logic with themes and such.</p>
<p>And as you can guess, the homepage does not contain any code snippets, <strong>which is why Lighthouse is unhappy: the eager load.</strong></p>
<h3 id="dynamically-loading-modules-with-nextjs">Dynamically loading modules with Next.js</h3>
<p>Although <code>React</code> allows lazy loading with the <a href="https://reactjs.org/docs/react-api.html#reactsuspense">suspense API</a>, it&#39;s not available for <code>Next.js</code> since the <code>ReactDOMServer</code> support has not implemented yet.</p>
<p>Luckily, our thoughtful friend <code>Next.js</code> offers an alternative API for dynamic imports. It&#39;s called <a href="https://nextjs.org/docs/advanced-features/dynamic-import">next/dynamic</a> and pretty straightforward for such a use-case like this.</p>
<p>First, I changed my usage of <code>react-syntax-higlighter</code> to load and register parsers only for the languages I use.</p>
<pre><code class="language-jsx">// MarkdownCodeBlock.jsx
import { PrismLight } from &#39;react-syntax-highlighter&#39;
import jsx from &#39;react-syntax-highlighter/dist/cjs/languages/prism/jsx&#39;
import tsx from &#39;react-syntax-highlighter/dist/cjs/languages/prism/tsx&#39;

PrismLight.registerLanguage(&#39;jsx&#39;, jsx)
PrismLight.registerLanguage(&#39;tsx&#39;, tsx)

const MarkdownCodeBlock = ({ language, value }) =&gt; (
  &lt;PrismLight language={language}&gt;{value}&lt;/PrismLight&gt;
)

export default MarkdownCodeBlock
</code></pre>
<p>I also changed the strategy of using syntax highlighter to be on demand, so the other pages using markdown (such as <a href="https://altay.wtf/books">book notes</a>) won&#39;t load <code>react-markdown</code> and friends.</p>
<pre><code class="language-jsx">// Markdown.jsx
import ReactMarkdown from &#39;react-markdown&#39;
import dynamic from &#39;next/dynamic&#39;

const MarkdownCodeBlock = dynamic(() =&gt; import(&#39;./MarkdownCodeBlock&#39;))

const Markdown = ({ children }) =&gt; (
  &lt;ReactMarkdown
    renderers={{
      code: MarkdownCodeBlock,
    }}
  &gt;
    {children}
  &lt;/ReactMarkdown&gt;
)

export default Markdown
</code></pre>
<h3 id="and-then-did-they-live-happily-after-🤖👨💻">...and then, did they live happily after? 🤖👨‍💻</h3>
<p>In the end, the performance score of <a href="https://altay.wtf/">the home page</a> increased dramatically.</p>
<p><img src="https://altay.wtf/images/notes/happier-lighthouse/lighthouse-score-after.png" alt="Lighthouse score, after the optimization"></p>
<p>This approach doesn&#39;t eradicate the CPU tax of loading and executing the JS on the pages that I need to render a code editor, such as this post.</p>
<p>Nonetheless, it divides the amount of work while browsing and progressively loads the required code, which is more helpful than not doing it. 🤨</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Definition of Scenius]]></title>
        <id>https://altay.wtf/notes/scenius</id>
        <link href="https://altay.wtf/notes/scenius"/>
        <updated>2020-10-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Great minds grow together.]]></summary>
        <content type="html"><![CDATA[<p>It&#39;s a term <em>invented</em> by Brian Eno.</p>
<blockquote>
<p>Scenius stands for the intelligence and the intuition of a whole cultural scene. It is the communal form of the concept of the genius.</p>
</blockquote>
<p>A scenius is nurtured by several factors<a href="https://kk.org/thetechnium/scenius-or-comm/">^1</a></p>
<ul>
<li>Mutual appreciation</li>
<li>Rapid exchange of tools and techniques</li>
<li>Network effects of success</li>
<li>Local tolerance for the novelties</li>
</ul>
<h3 id="references">References</h3>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[The vampire test]]></title>
        <id>https://altay.wtf/notes/the-vampire-test</id>
        <link href="https://altay.wtf/notes/the-vampire-test"/>
        <updated>2020-10-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Well, that was easy.]]></summary>
        <content type="html"><![CDATA[<p>After doing something, take a moment and think about how it felt.</p>
<p>Did you get energized and motivated or exhausted and drained?</p>
<hr>
<p>Also a Derek Sivers quote:</p>
<blockquote>
<p>Whatever excites you, do it.<br>Whatever drains you, stop doing it.</p>
</blockquote>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Trap: What Happened to Our Dreams of Freedom]]></title>
        <id>https://altay.wtf/notes/the-trap</id>
        <link href="https://altay.wtf/notes/the-trap"/>
        <updated>2020-08-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Notes from by Adam Curtis's amazing documentary.]]></summary>
        <content type="html"><![CDATA[<p>Notes from the BBC documentary: <a href="https://en.wikipedia.org/wiki/The_Trap_(TV_series)">The Trap</a></p>
<h3 id="episode-1">Episode 1</h3>
<ul>
<li><p>cold war game theory RAND the company</p>
</li>
<li><p>john nash wanted to use the same eq in daily life but he was sizofren</p>
</li>
<li><p>however his works influenced a lot of people</p>
</li>
<li><p>rd laing was a psychiatrist and one of them</p>
</li>
<li><p>started a movement by indicating the fact that game theory is actually applicable in daily life</p>
</li>
<li><p>made thud experiment by sending non-mentally ill people to clinics in usa and they said they’re just hearing some voice but rest is ok</p>
</li>
<li><p>clinics diagnosed those people as ill and treated for 2 months</p>
</li>
<li><p>then laing announced that was an experiment and wtf u did guys</p>
</li>
<li><p>clinics said sent us more and we won’t be wrong from now on</p>
</li>
<li><p>clinics said there are 41 fake ppl but nobody sent fake ppl</p>
</li>
<li><p>that bullshit lead to the development of a new diagnose system based on the questions you answer and learn if you’re mentally ill or not (dr. robert spitzer)</p>
</li>
<li><p>turns out 50% of america is crazy</p>
</li>
<li><p>and having a mentally unstable state is more normalized since everybody is crazy</p>
</li>
<li><p>you are more conscious and know what to do?</p>
</li>
<li><p>game theory also helped UK to send corrupt politicians and elite people away</p>
</li>
<li><p>james buchanan told margaret thatcher about the public choice</p>
</li>
<li><p>people were convinced those corrupts were harming the country</p>
</li>
<li><p>thatcher had consultants who made tv shows like sitcom (bisi bisi minister)</p>
</li>
<li><p>alain eithoven</p>
</li>
<li><p>old rand employee, was considering different strategies for possible nuclear war scenarios</p>
</li>
<li><p>prefers analytical thinking instead of patriotism for pentagon</p>
</li>
</ul>
<h3 id="episode-2">Episode 2</h3>
<ul>
<li><p>bill clinton elected with lots of promises about reforms</p>
</li>
<li><p>but the government had so many debts so his financial advisors told him not to borrow any money just let the market flow.</p>
</li>
<li><p>as time time passes, capitalism played a big role for society in every area.</p>
</li>
<li><p>the idea of democracy has been taken over by a simplified economic model of human beings.</p>
</li>
<li><p>freedom was re-defined as the ability of individuals to get whatever they wanted.</p>
</li>
<li><p>genes and game theory</p>
</li>
<li><p>people are MACHINE LIKE CREATURES to be players of the market</p>
</li>
<li><p>drug companies and fixing mental problems with prozac</p>
</li>
<li><p>now all of the people diagnosed as mentally ill on first episode are using pills lol</p>
</li>
<li><p>robert spitzer comes again and refactors the diagnose to focus on only observable symptoms</p>
</li>
<li><p>but it was actually good because of MACHINIZATION (?)</p>
</li>
<li><p>defining “targets” as performance evaluation for some facilities lead to very ridiculous things in britain</p>
</li>
<li><p>such as hospitals scheduling operations to patient&#39;s holiday date and bringing up the “HELLO Nurses” (what? we took care of him :D??)</p>
</li>
<li><p>police reporting various events (like robbery) as vague things doesn’t affect the crime rate calculations</p>
</li>
<li><p>leaving things to the free market lead to big inequalities in society</p>
</li>
<li><p>politicians have become tools of elites and they have big affect on the market</p>
</li>
<li><p>economic model of society is rethought (from game theory + self interest = human as businessman in a free market because we are all rational) to behavioral economics which we are not rational</p>
</li>
<li><p>experiments lead that only two groups in society actually behave in rational self interested way -&gt; economist themselves and psychopaths (lel)</p>
</li>
</ul>
<h3 id="episode-3">Episode 3</h3>
<ul>
<li><p>freedom is a problem after 2nd world war</p>
</li>
<li><p>even soviets who claim to have freedom starts to kill hungarians who trying to gain their freedom from communism</p>
</li>
<li><p>Isaiah Berlin thinks about the freedom and comes up with two branches: positive liberty and negative liberty</p>
</li>
<li><p>positive liberty: if you have so much freedom to people they are confused. they need to become more rational and logical beings and leaders try so hard for that so they kill their own people.</p>
</li>
<li><p>negative liberty: freedom of individuals but power should be restrained (similar vision to free market)</p>
</li>
<li><p>J.P. Sartre and some people from 3rd world country who educated in Paris think that all of the societies should be liberated from tyranny and it will come with the terror</p>
</li>
<li><p>Those countries made some revolutions but the problem was there were dictators backed by USA</p>
</li>
<li><p>but USA’s dictator backing policies does not work for Iran, believers of SERIAT (yine Fransa’da egitim goren bi adamin soy adindan geliyormus) has defeated SAH</p>
</li>
<li><p>then Ronald Reagan elected and USA reformed their outside strategies to back democratic movements against dictators</p>
</li>
<li><p>some of them worked but the main idea was make public to believe in democracy (by giving them some rights) but the main management power is still in the hand of elites</p>
</li>
<li><p>after the collapse of soviet union and similar regimes, there’s a common belief the only thing works right now is liberal democracy</p>
</li>
<li><p>Russia elected a new guy called Yeltsin and USA decided to support him by privatizing the facilities and free market</p>
</li>
<li><p>in first two episodes, we’ve seen what free market did to Britain and USA in 1980’s and worse happened to Russia</p>
</li>
<li><p>money become worthless and people sold their own belongings to get very basic goods</p>
</li>
<li><p>when privatization started, every Russian was given vouchers to buy shares in those companies</p>
</li>
<li><p>most of them sold those to ruthless businessman (then evolved an elite group called OLIGARCHS)</p>
</li>
<li><p>Yeltsin suspended the parliament, ordered army to attack to the protestors and became a puppet of the oligarchs</p>
</li>
<li><p>then Putin came to the rescue by arresting those oligarchs and supporting a national economy</p>
</li>
<li><p>after Tony Blair came to the power in Britain in 21th century, he wrote a letter to Berlin like is it possible to combine two liberty paths (he never replied because dying)</p>
</li>
<li><p>he decided to try this idea (Kosovo - Serbia) by convincing NATO to western countries has the duty of helping others fighting with the tyranny</p>
</li>
<li><p>then 9/11 happened and they decided to become democracy providers / liberators (same approach with the Russia / Yeltsin)</p>
</li>
<li><p>Iraqi people wanted the real democracy instead of USA controlled market and USA backed politicians and they’re trying to get it with radical islam</p>
</li>
<li><p>radical islamists bombed London because the citizens were supporting the invaders and Blair come up with new legal regulations (deporting and etc)</p>
</li>
<li><p>that, again, transformed a negative liberty attempt to a positive one</p>
</li>
<li><p>political leaders have the power of deciding the right free individual, who is a potential terrorist or not….</p>
</li>
</ul>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dear state, please stop lying]]></title>
        <id>https://altay.wtf/notes/dear-state</id>
        <link href="https://altay.wtf/notes/dear-state"/>
        <updated>2020-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[A brief revisit of how we represent states while building user-interfaces.]]></summary>
        <content type="html"><![CDATA[<p>Is managing the UI state is hard, or we make it hard for ourselves by not paying attention?</p>
<p>How do we do that? 🤔</p>
<p>We have this React component fetches the list of something and renders accordingly.</p>
<pre><code class="language-jsx">class List extends React.Component {
  state = { loading: false, data: [], error: null }

  async componentDidMount() {
    this.setState({ loading: true })

    try {
      const { data } = await api.getData()
      this.setState({ loading: false, data })
    } catch (error) {
      this.setState({ loading: false, error })
    }
  }

  render() {
    if (this.state.loading) {
      return &lt;p&gt;Loading...&lt;/p&gt;
    }

    if (this.state.error) {
      return (
        &lt;p&gt;
          Sorry, you broke the app. &lt;br /&gt;
          Here&#39;s what our server says: {this.state.error.message}
        &lt;/p&gt;
      )
    }

    return (
      &lt;ul&gt;
        {this.state.data.map((item) =&gt; (
          &lt;li key={item.id}&gt;{item.name}&lt;/li&gt;
        ))}
      &lt;/ul&gt;
    )
  }
}
</code></pre>
<p>Pretty straightforward, huh?</p>
<p>Probably not 😬</p>
<p>Our state initializes with <code>loading=false</code> and <code>fetchData</code> is called on <code>componentDidMount</code> which means, right after the initial render.</p>
<p>This will cause a flash in the <code>Loading</code> text since it&#39;s displayed after we render the empty list in our initial state (<code>data=[]</code>)</p>
<p>But programmers are pragmatic and smart people; we can fix this by initializing the state with <code>loading=true</code>?</p>
<p>✅ - No more flashing UI.</p>
<p>😰 - We say that something is <code>loading</code> but that is not the <em>reality</em>, nothing is <em>literally</em> <code>loading</code> until <code>fetchData</code> is called.</p>
<p><em>Our state is lying</em>, but we can live with that.</p>
<h3 id="request-failed-oh-snap">Request failed? Oh, snap!</h3>
<p>Let&#39;s take one more step forward for a better UX and add a <em>retry</em> button to the error component.</p>
<pre><code class="language-jsx">class List extends React.Component {
  state = { loading: true, data: [], error: null }

  componentDidMount() {
    this.fetchData()
  }

  fetchData = async () =&gt; {
    this.setState({ loading: true, error: null }) // WHY 🤡

    try {
      const { data } = await api.getData()
      this.setState({ loading: false, data })
    } catch (error) {
      this.setState({ loading: false, error })
    }
  }

  render() {
    if (this.state.loading) {
      return &lt;p&gt;Loading...&lt;/p&gt;
    }

    if (this.state.error) {
      return (
        &lt;div&gt;
          &lt;p&gt;
            Sorry, you broke the app. &lt;br /&gt;
            Here&#39;s what our server says: {this.state.error.message}
          &lt;/p&gt;

          &lt;button type=&quot;button&quot; onClick={this.fetchData}&gt;
            Try again
          &lt;/button&gt;
        &lt;/div&gt;
      )
    }

    return (
      &lt;ul&gt;
        {this.state.data.map((item) =&gt; (
          &lt;li key={item.id}&gt;{item.name}&lt;/li&gt;
        ))}
      &lt;/ul&gt;
    )
  }
}
</code></pre>
<p>OK, this would work for our beloved users.</p>
<p>But readability is not optimal because we&#39;re doing some nasty things. We need to perform a clean-up since <code>error</code> might be a leftover from the first call.</p>
<p>Again, we may come up with an ingenious solution to make that bearable by introducing a custom <code>onRetry</code> method.</p>
<pre><code class="language-jsx">class List extends React.Component {
  // ...

  fetchData = async () =&gt; {
    // this.setState({ loading: true, error: null }) Gone 👋

    try {
      const { data } = await api.getData()
      this.setState({ loading: false, data })
    } catch (error) {
      this.setState({ loading: false, error })
    }
  }

  onRetry = () =&gt; {
    this.setState(
      {
        loading: true,
        error: null,
      },
      () =&gt; this.fetchData(),
    )
  }

  // ...
}
</code></pre>
<p>✅ - More readable and traceable.</p>
<p>😰 - We are skipping a fundamentally crucial point, and our state is still lying.</p>
<h3 id="time-to-question-our-choices">Time to question our choices</h3>
<ul>
<li>Why can our state have an error while loading is <code>true</code>?</li>
<li>Why does our state have <code>data=[]</code> while loading is <code>true</code>?</li>
<li>Why is that possible to have <code>data</code> and <code>error</code> at the same time?</li>
</ul>
<blockquote>
<p>👨🏻‍💻: Dear state, pls stop lying.</p>
</blockquote>
<blockquote>
<p>🤖: 01001000011001010110110001110000</p>
</blockquote>
<h3 id="how-types-can-help-us-to-make-better-choices">How types can help us to make better choices</h3>
<p>It&#39;s time to enter the safe and shiny world of types, where we can stop <a href="https://www.youtube.com/watch?v=IcgmSRJHu_8"><em>making impossible state possible</em></a>.</p>
<p>🥁🥁🥁</p>
<p>Let&#39;s start with a tiny touch and strip the meaningless properties from different types of UI states.</p>
<pre><code class="language-ts">type LoadingState = { type: &#39;loading&#39; }
type SuccessState&lt;T&gt; = { type: &#39;sucess&#39;; data: T }
type FailureState = { type: &#39;failure&#39;; error: Error }
</code></pre>
<p>Now we can use the simple but powerful <a href="https://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions">discriminated (or tagged) unions feature of TypeScript</a>.</p>
<pre><code class="language-ts">type State&lt;T&gt; = LoadingState | SuccessState&lt;T&gt; | FailureState
</code></pre>
<p>By revisiting our state design, we made all these questions irrelevant.</p>
<ul>
<li><del>Why can our state have an error while loading is <code>true</code>?</del></li>
<li><del>Why does our state have <code>data=[]</code> while loading is <code>true</code>?</del></li>
<li><del>Why is that possible to have <code>data</code> and <code>error</code> at the same time?</del></li>
</ul>
<p>How would that affect our component?</p>
<pre><code class="language-tsx">class List extends React.Component {
  // no more pointless initial values
  state: State&lt;{ id: number; name: string }[]&gt; = { type: &#39;loading&#39; }

  componentDidMount() {
    this.fetchData()
  }

  async fetchData() {
    try {
      const { data } = await api.getData()
      this.setState({ type: &#39;success&#39;, data })
    } catch (error) {
      this.setState({ type: &#39;failure&#39;, error })
    }
  }

  // no more nasty clean-ups
  onRetry = () =&gt; this.setState({ type: &#39;loading&#39; }, this.fetchData)

  // no more top level if statements
  render() {
    switch (this.state.type) {
      case &#39;loading&#39;:
        return &lt;p&gt;Loading...&lt;/p&gt;

      case &#39;failure&#39;:
        return (
          &lt;div&gt;
            &lt;p&gt;
              Sorry, you broke the app. &lt;br /&gt;
              Here&#39;s what our server says: {this.state.error.message}
            &lt;/p&gt;

            &lt;button type=&quot;button&quot; onClick={this.onRetry}&gt;
              Try again
            &lt;/button&gt;
          &lt;/div&gt;
        )

      case &#39;success&#39;:
        return (
          &lt;ul&gt;
            {this.state.data.map((item) =&gt; (
              &lt;li key={item.id}&gt;{item.name}&lt;/li&gt;
            ))}
          &lt;/ul&gt;
        )
    }
  }
}
</code></pre>
<p>Looks better?</p>
<p>There are more benefits than making the state a trustworthy citizen.</p>
<ul>
<li>We have proper types for the <code>data</code>.</li>
<li>We can have proper types for the <code>error</code> by creating custom exception types (will discuss later).</li>
<li>TypeScript will also help us to catch programmer errors to prevent runtime exceptions, as shown below.</li>
</ul>
<pre><code class="language-tsx">switch (this.state.type) {
  case &#39;loading&#39;:
    return &lt;p&gt;Loading: {this.state.data[0].id}&lt;/p&gt; // TSC SAYS NO!
</code></pre>
<blockquote>
<p>🤖: 01001110011010010110001101100101</p>
</blockquote>
<h3 id="references">References</h3>
<ul>
<li><a href="https://www.oreilly.com/library/view/effective-typescript/9781492053736/">&quot;Effective TypeScript&quot;</a> by <a href="https://github.com/danvk">Dan Vanderkam</a></li>
<li><a href="https://www.youtube.com/watch?v=IcgmSRJHu_8">&quot;Making Impossible States Impossible&quot;</a> by <a href="https://github.com/rtfeldman">Richard Feldman</a></li>
<li><a href="https://dev.to/stereobooster/pragmatic-types-making-impossible-states-impossible-inh">&quot;Pragmatic types: making impossible states impossible&quot;</a> by <a href="https://stereobooster.com">stereobooster</a></li>
</ul>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[We built an iMessage Extension for our React Native app]]></title>
        <id>https://altay.wtf/notes/react-native-imessage</id>
        <link href="https://altay.wtf/notes/react-native-imessage"/>
        <updated>2019-04-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Now you can too.]]></summary>
        <content type="html"><![CDATA[<p>This post was redacted by the lovely marketing people of Lisk, and originally published in <a href="https://medium.com/lisk-blog/we-built-an-imessage-extension-for-our-react-native-based-mobile-app-now-you-can-too-495beb8e6047">medium</a>, <a href="https://dev.to/altay/we-built-an-imessage-extension-for-our-react-native-based-mobile-app-now-you-can-too-2387">dev.to</a> and <a href="https://dzone.com/blog/imessenger">dzone</a>.</p>
<p>There is <a href="https://github.com/altaywtf/react-native-imessage-extension">a Github repository</a> for the code screenshots you will see below.</p>
<hr>
<p>When we set out to build an iMessage extension for <a href="https://lisk.io/hub">Lisk Mobile</a> using React Native, we immediately hit an exciting challenge. As it turns out, when it comes to third-party applications, Apple likes developers to play by its own rules. If a company wants to benefit new features of the tech giant’s operational systems and rich user base, it needs to be built using Apple’s tools and programming language. iPhone’s iMessage is definitely worth this hassle. It has proven to be a big hit since its release in 2016. Within the first six months, iMessage has generated <a href="https://sensortower.com/blog/imessage-app-store-six-months-later">thousands of innovative</a> in-messenger extensions including those created by <a href="https://medium.com/airbnb-engineering/introducing-the-airbnb-imessage-app-806f48d303a8#.jkydkawtx">Airbnb</a> and <a href="https://www.cnet.com/how-to/share-dropbox-files-via-imessage-and-sign-pdfs-on-your-iphone/">Dropbox</a>. Late in 2018, Mark Zuckerberg admitted this feature is one of Facebook’s <a href="https://www.macrumors.com/2018/10/31/mark-zuckerberg-says-imessage/">&#39;biggest competitor by far&#39;</a>. Since the release of Lisk Mobile during Lisk’s Berlin meetup in October 2018, our team has been busy implementing features such as Face ID Authentication, as well as developing blockchain-specific solutions. Identifying the opportunity to extend the iMessage option for our users, we got to work on our own integration.</p>
<p>The iMessage extension was included in Lisk Mobile 0.10.0, which was released in February 2019. Our users can now request and send LSK tokens straight from the iOS-based messenger without opening our app. However, the journey to implement this feature wasn’t straightforward — <strong>Lisk Mobile is written in JavaScript using React Native</strong>, while iMessage requires development in native iOS. During our research, we have found there is just a handful of resources available to help with using React Native to build iOS extensions available out there. There was no clear way to proceed. After thorough deliberation, we have decided to try a different approach by building our own bridge implementation. We found it a very educational and motivational journey for our team to develop the feature in this way. We will show you how by breaking the solution down into native and React Native parts and describing how to bind these separated parts together.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/0.gif" alt=""></p>
<h3 id="the-problem-there-was-no-up-to-date-documentation-to-create-an-imessage-extension-using-react-native">The problem: there was no up-to-date documentation to create an iMessage extension using React Native.</h3>
<p>Before we dive deep into the solution, let’s first set out the actual challenge. We used React Native in order to stay aligned with the programming language of the entire Lisk platform. We have been developing our mobile blockchain wallet since April 2018. This means we already have visual components and business logic enhanced by utility functions for cryptographic operations and communicating with the API of <a href="https://lisk.io/documentation/lisk-core">Lisk Core</a>, which is a platform containing all information necessary to interact with our blockchain, including security, consensus algorithm and much more. The communication is provided by <a href="https://lisk.io/documentation/lisk-elements">Lisk Elements</a>, <em>our modular JavaScript library</em>.</p>
<p>The first option was to look for existing React Native component and educational material. Unfortunately, we could not find official documentation or up-to-date resources due to the fast pace of change in both React Native and native iOS development.</p>
<p>The second option was to try native iOS development within the Lisk Mobile codebase. The benefit of this approach was <a href="https://developer.apple.com/documentation/messages/icecreambuilder_building_an_imessage_extension">example projects</a> and <a href="https://developer.apple.com/videos/play/wwdc2016/224">conference talks</a> provided by Apple. However, introducing a considerable amount of Swift or Objective-C into the codebase was not desirable. Such a move would cause too much code duplication due to us having to rewrite most of our existing business logic and UI components.</p>
<h3 id="the-solution-we-wrote-our-own-bridge-implementation-and-documented-the-process">The solution: we wrote our own bridge implementation and documented the process.</h3>
<p>After careful evaluation, we decided to take an alternative route: writing our own bridge implementation. In the rest of this article, we will explain how we did it. If you want to jump straight into code, we’ve also created this handy <a href="https://github.com/LightcurveHQ/react-native-imessage-extension">demo project on GitHub</a></p>
<h2 id="create-a-react-native-project">Create a React Native Project</h2>
<p>First things first! Let’s start by creating a brand new React Native application. Since we are going to use native features, it would be better to <a href="https://facebook.github.io/react-native/docs/getting-started#the-react-native-cli">follow the related part of the official documentation</a> that suggests using the <a href="https://facebook.github.io/react-native/docs/getting-started.html#the-react-native-cli">react-native-cli</a>.</p>
<p>If you don’t have it installed, you can do it by running</p>
<pre><code>$ npm install -g react-native-cli
</code></pre>
<p>Then let’s create a new project called, of course, AwesomeProject!</p>
<pre><code>$ react-native init AwesomeProject
</code></pre>
<h2 id="add-an-imessage-extension-target">Add an iMessage Extension Target</h2>
<p>The next step is to add a target for our Xcode project that covers the iMessage extension.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/1.png" alt=""><br><em>Open the iOS project with Xcode</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/2.png" alt=""><br>_Add new target to the project by navigating through **_File -&gt; New -&gt; Target _**menu_</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/3.png" alt=""><br><em>Choose iMessage Extension</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/4.png" alt=""><br><em>Give it a creative name</em></p>
<h2 id="create-an-imessage-root-on-the-react-native-side">Create an iMessage Root on the React Native Side</h2>
<p>Now that we have our Xcode target for the iMessage extension, it’s time to create a blueprint for our root component on the React Native side.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/5.png" alt=""><br><em>The entry point of the iMessage Extension on the React Native Side</em></p>
<p>We also need to register that component in order to access it easily in the following steps. Let’s create another file in the project root <a href="https://github.com/aydieneue/react-native-imessage-extension/blob/master/index.js">similar to the one React Native creates for the main application</a>.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/6.png" alt=""><br><em>App Registry Part of the iMessage Extension on the React Native Side</em></p>
<h2 id="connecting-imessage-component-with-the-native-side">Connecting iMessage Component with the Native Side</h2>
<p>At this step, we will update our iMessage target to have the capability of rendering a React Native application within a native one. In order to achieve this, we have some manual work to do. In a regular React Native application, this step is actually handled automatically by the boilerplate that we have from <em>react-native-cli</em>, this is the case for Lisk. If you feel something is missing, you can compare the configuration and structure of your iMessage extension target with the main application.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/7.png" alt=""><br><em>Build Phase configuration of Main Application</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/8.png" alt=""><br><em>Build Phase configuration of iMessage Extension Target</em></p>
<h3 id="linking-libraries">Linking Libraries</h3>
<p>We will start the configuration by linking the React related libraries. Since it’s meant to be a simple application, libraries we add are just the core ones we need at the moment. <strong><a href="https://facebook.github.io/react-native/docs/linking-libraries-ios#manual-linking">If you are using some third party modules on your main application</a> and also need them in your iMessage Extension, don’t forget to link them here as well!</strong></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/9.png" alt=""><br><em>Build Phase / Link Binary With Libraries configuration of iMessage Extension Target</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/10.png" alt=""><br><em>Build Phase / Link Binary With Libraries configuration of iMessage Extension Target</em></p>
<h3 id="creating-a-bridge-header-file-for-swift">Creating a Bridge Header file for Swift</h3>
<p>Now that we have made those libraries available for our native part, it’s time to create a Bridging-Header file make them recognizable for the Swift compiler. The reason behind this is the libraries we have linked on the previous step are written with Objective-C. This has been a common approach since <a href="https://developer.apple.com/documentation/swift/imported_c_and_objective-c_apis/importing_objective-c_into_swift">Apple introduced Swift as the new language of the iOS platform</a> and you can obtain deeper knowledge about it <a href="https://www.hackingwithswift.com/example-code/language/how-to-create-an-objective-c-bridging-header-to-use-code-in-swift">here</a>.</p>
<p>We start with creating a new header file called <strong>Bridging-Header.h</strong> inside <strong>AwesomeProjectMessageExtension</strong> folder.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/11.png" alt=""><br><em>Xcode -&gt; File -&gt; New</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/12.png" alt=""><br><em>Freshly Configured Bridging Header</em></p>
<p>Next, by navigating to <strong>Build Settings / Swift Compiler — General</strong> section of the Xcode configuration, choose that file as the Objective-C bridging header.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/13.png" alt=""><br><em>Build Settings / Swift Compiler — General section of the Xcode configuration</em></p>
<h3 id="updating-project-and-build-configuration">Updating Project and Build Configuration</h3>
<p>The first one is updating <strong>Info.plist</strong>, a configuration file placed in every iOS project. In order to make our React Native bundle accessible in development mode, we need to enable loading content from localhost.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/14.png" alt=""><br>Updating Info.plist to make sure we are able to load bundle from localhost</p>
<p>The next step is to add a <strong>Build Phase</strong> for iMessage extensions target in order to make sure we trigger the build script of React Native when we are running the extension.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/15.png" alt=""><br>Add a new (Run Script) step to the Build Phases of iMessage Extension Target</p>
<p>The last step for this section is to update the schemes of the project. Each target in the application has a scheme that defines the configuration for actions available within the context of Xcode like <em>Build, Run and Analyze.</em></p>
<p>We update the schemes of both the main application and iMessage extension to make sure we have all the required content while preparing the app for the release.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/16.png" alt=""><br><em>Navigate to the Edit Scheme menu of Xcode</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/17.png" alt=""><br><em>Add message extension to the build targets of the main app</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/18.png" alt=""><br><em>Add React to the build targets of the iMessage Extension</em></p>
<h3 id="rctbridge-and-the-initial-render">RCTBridge and the Initial Render</h3>
<p>Now that we are pretty much done with the configuration, it’s time to start building our structure to render the application we have registered in the <strong>Create iMessage Root on React Native Side</strong> section.</p>
<p>First, let’s take a quick look at the structure of the iMessage extension. Every iMessage Extension <a href="https://developer.apple.com/documentation/messages/msmessagesappviewcontroller">has an entry point called MSMessagesAppViewController</a> which extends the <a href="https://developer.apple.com/documentation/uikit/uiviewcontroller">UIViewController class from UIKit</a> and contains lifecycle methods and properties of an iMessage extension instance. This is similar to the <a href="https://developer.apple.com/documentation/uikit/uiapplicationdelegate">AppDelegate in our main iOS application</a> but doesn’t have all the capabilities of it.</p>
<p>What we focus on at this point is to find a suitable way to create our <em>RCTRootView</em> (an UIView subclass exposed by React Native that can be embedded in any part of a native application) and load our iMessage related code on the React Native side as the bundle.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/19.png" alt=""><br><em>Initial structure of MessagesViewController.swift</em></p>
<p>First, we start with modifying our <em>MessagesViewController.swift</em> to create an <em>RCTBridge</em>, <em>RCTRootView</em> and render our registered <em>AwesomeProjectMessageExtension</em> module within that view.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/20.png" alt=""><br><em>The initial state of the presentReactNativeView method</em></p>
<p>Since we want to clear out everything in the screen before and after opening the iMessage extension, we also create a little helper module that does the trick for us!</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/21.png" alt=""><br><em>We have added removeAllChildViewControllers utility to clear view hierarchy when needed: Before presenting React Native view and cleaning out the application</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/22.png" alt=""><br><em>Initial run!</em></p>
<h2 id="creating-bridge-modules">Creating Bridge Modules</h2>
<p>In this section, we are going to create our helpers and modules on the Swift side in order to expose the required methods and events to communicate with the React Native side.</p>
<h3 id="creating-a-mapper-for-swift--js-communication">Creating a Mapper for Swift — JS Communication</h3>
<p>Since we are going to send data from Swift to the React Native, it would be nice to create a mapper utility for formatting that data properly.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/23.png" alt=""><br><em>Mapper utility</em></p>
<h3 id="creating-a-manager-for-messagesviewcontroller">Creating a Manager for MessagesViewController</h3>
<p>Now we are going to create a module named <em>MessagesManager</em> that has a connection with our main <em>MessagesViewController</em> and will help us to interact with from the React Native side.</p>
<p>Based on the guidance from the <a href="https://developer.apple.com/documentation/messages/msmessagesappviewcontroller">official documentation</a> we will need access to <a href="https://developer.apple.com/documentation/messages/msmessagesappviewcontroller/1649188-activeconversation">activeConversion</a> object and <a href="https://developer.apple.com/documentation/messages/msmessagesappviewcontroller/1649182-presentationstyle">presentation</a> style as well as the methods will allow us to modify them.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/24.png" alt=""><br><em>Initial structure of MessagesManager.swift</em></p>
<p>Since we are creating that custom class with Swift, we also need to provide the interface file to make sure it’s recognized as a native module by React Native.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/25.png" alt=""><br><em>MessagesManager.m file that contains interface declaration for React Native</em></p>
<h3 id="creating-an-eventemitter-for-messagesviewcontroller">Creating an EventEmitter for MessagesViewController</h3>
<p>In addition to the helper methods we have provided in the previous section, now we will create another class <a href="https://facebook.github.io/react-native/docs/native-modules-ios#sending-events-to-javascript">by following the EventEmitter guide from official React Native documentation</a>.</p>
<p><em>MessagesEventEmitter</em> will help us to keep the JavaScript side informed when there’s a change in the iMessage context. Those changes may be applied as a result of an interaction made by the user (like updating presentation style, selecting a message in a conversation) or receiving a new message from one of the remote participants.</p>
<p>First of all, we update our <em>MessagesViewController</em> to define a <a href="https://docs.swift.org/swift-book/LanguageGuide/Protocols.html">protocol</a> that can be easily implemented by <em>MessagesEventEmitter</em> to reduce the effort we need to make (and encourage separation of concerns) in order to follow an event-based design pattern.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/26.png" alt=""><br><em>Updates we have made on MessagesViewController file in order to use protocol pattern</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/27.png" alt=""><br><em>Initial structure of MessagesEventEmitter</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/28.png" alt=""><br><em>MessagesEventEmitter.m file that contains interface declaration for React Native</em></p>
<h3 id="custom-module-initializer">Custom Module Initializer</h3>
<p>If you create a native module with React Native by following the <a href="https://facebook.github.io/react-native/docs/native-modules-ios#native-module-setup">basic flow</a>, you’ll end up with a pre-instantiated object that is created during the initialization step of the bridge. If it was a regular iOS application, we would have a chance to communicate with the root view controller by using <a href="https://developer.apple.com/documentation/uikit/uiapplication/1622975-shared">UIApplication’s shared property</a> but that’s not what we were exactly looking for.</p>
<p>Considering that our Native Module needs to be stateful to communicate with the <em>MessagesAppViewController</em> instance, we ended up creating a custom module initializer<a href="https://stackoverflow.com/a/47468905/4965161"> by following an approach</a> derived from the<a href="https://facebook.github.io/react-native/docs/native-modules-ios#dependency-injection"> the dependency injection guide on React Native documentation</a>.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/29.png" alt=""><br><em>Custom ModuleInitializer that allows us to use dependency injection pattern at the initialization step of MessagesManager and MessagesEventEmitter modules</em></p>
<p>Then we will update the <em>presentReactNative</em> method of <em>MessagesViewController</em> to use that custom module initializer.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/30.png" alt=""><br><em>Updating related parts of MessagesViewController to use custom module initializer</em></p>
<h2 id="consuming-native-modules-on-react-native">Consuming Native Modules on React Native</h2>
<p>Now that we have covered pretty much all the things we need from our native modules, we can start playing with them on the React Native side.</p>
<h3 id="updating-presentation-style">Updating Presentation Style</h3>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/31.png" alt=""><br><em>Making use of getPresentationStyle and updatePresentationStyle methods on the React Native side</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/32.gif" alt=""><br><em>onTogglePresentationStyle Method in Action</em></p>
<p>So far so good huh? But we forgot something. Let’s look at the recording below and try to catch what’s missing.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/33.gif" alt=""><br>🤔 🤔 🤔</p>
<p>Since we are not listening to the events related to the presentation style changes triggered by the native UI, we end up in a loop with the sheet continually opening, we don’t have the correct value of <em>presentationStyle</em> right after it’s been updated. In order to resolve this, we are going to use the <em>MessagesEventEmitter</em> module.</p>
<p>This will allow the sheet to receive updates on the state from both the native Swift environment (for when users manually close the sheet) and from within our React Native app.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/34.png" alt=""><br><em>Using MessagesEventEmitter for listening changes on presentationStyle</em></p>
<p>Now the app responds to both triggers from the codebase, and users manually close or open the sheet.</p>
<h3 id="composing-a-message">Composing a Message</h3>
<p>Now we are so close to our main goal, composing an iMessage from the React Native side!</p>
<p>Let’s start with initializing our blueprint to create the data of a message object that we can through our MessagesManager module.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/35.png" alt=""><br><em>Using composeMessage method of MessagesManager to create a test message</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/36.png" alt=""><br><em>Assets section of the Xcode, where we add images in order to use in the Message templates</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/37.gif" alt=""><br><em>Outcome of the test message</em></p>
<h3 id="using-the-url-field-to-share-data">Using the URL field to share data</h3>
<p>Now that we are able to compose and send a message, we create a very simple example to demonstrate the usage of url field.</p>
<p>What we are going to do is to put a timestamp and the identifier of the sender to the URL field and present it on the screen. We will also make use of the <em>getActiveConversation</em> method exposed by <em>MessagesManager</em> as well as the <em>didReceiveMessage</em> and <em>didSelectMessage</em> events from the <em>MessagesEvents</em> module.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/38.png" alt=""><br><em>Updating App.iMessage.js to make use of URL field</em></p>
<p>Now if we send a message as Kate to John (or vica-versa) we can observe the change in the timestamps and the sender IDs.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/39.gif" alt=""><br><em>Sending a message as Kate to John. Kate’s sender ID is CD8FBE2C-D25F-4683–85f5–669C6E42DDF8</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/40.gif" alt=""><br><em>Opening and replying Kate’s message as John. John’s sender ID is 721FA6A5-CC6F-42FD-A840–4B846E634E62</em></p>
<p>If you want to share more data and handle complex logic, our recommendation is to use a third-party library for simplifying the URL construction and parsing logic. For a better example, you can check out <a href="https://github.com/LiskHQ/lisk-mobile/tree/development/src/components/imessage">the iMessage part of our open source Lisk Mobile application</a>.</p>
<h2 id="extras">Extras</h2>
<h3 id="unsettled-problems">Unsettled Problems</h3>
<h3 id="mysterious-simulator-crash">Mysterious Simulator Crash</h3>
<p>When the application is run from the Xcode, there’s a crash that happens right after we go back from the message detail screen to the list screen. We haven’t found the crux of this problem but we were able to reproduce it also with the example project from Apple’s official documentation.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/42.gif" alt=""><br><em>Mysterious Simulator Crash</em> 🤔</p>
<p>Our workaround for the crash is to stop the Xcode right after we get everything running. It will make more sense if you take a look at the <strong>Remote Debugger and Reload Menu for Development</strong> section below.</p>
<h3 id="less-mysterious-ios-10-crash">Less Mysterious iOS 10 Crash</h3>
<p>Unfortunately, we couldn’t make our iMessage extension run successfully within a simulator that has iOS 10. The interface of the iMessage extensions has been updated when there’s a migration from iOS 10 to 11. It might be related with that update but there was not enough information for us to track the problem so we ended up choosing iOS 11 as our deployment target of the iMessage extension.</p>
<h3 id="not-sure-if-bug-or-feature-simulator-refreshes-participant-ids">Not sure if bug or feature: Simulator Refreshes Participant IDs</h3>
<p>While running the iMessage extension in the simulator, the participant identifiers coming from the <em>activeConversation</em> object of Kate and John are changed each time you compose a message. Whether it stems from a bug or a feature remains to be seen, but we had to run the application on testing devices in order to make sure our participant identifier logic worked properly.</p>
<h2 id="gotchas">Gotchas</h2>
<h3 id="remote-debugger-and-reload-menu-for-development">Remote Debugger and Reload Menu for Development</h3>
<p>The setup we have made so far forces us to re-run the iMessage extension from the Xcode every time we want to see the latest version of the app after updating the JavaScript part.</p>
<p>Considering the <strong>mysterious simulator crash</strong> we have mentioned in the section above, this whole experience is kind of painful for developers coming from the realm of <a href="https://www.youtube.com/watch?v=xsSnOQynTHs">the hot reloading with time travel</a>. In order to improve the developer experience, we have implemented a little utility by using the <a href="https://github.com/facebook/react-native/blob/master/React/Modules/RCTDevSettings.mm">DevSettings module</a> provided by React Native.</p>
<p><a href="https://github.com/LightcurveHQ/react-native-imessage-extension/blob/master/DevMenu.js">https://github.com/LightcurveHQ/react-native-imessage-extension/blob/master/DevMenu.js</a></p>
<p>And import it to our <em>App.iMessage.js</em> component as following:</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/43.png" alt=""><br><em>Usage of DevMenu component within the root iMessage component</em></p>
<p>Unfortunately, <em>DevSettings</em> module does not export a method to get the value of <strong>liveReload</strong> and <strong>remoteDebugging</strong> flags so we need to double click the buttons within our <strong>DevMenu</strong> component to make sure we sync their state correctly.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/44.gif" alt=""><br><em>DevMenu in action!</em></p>
<h3 id="deep-link-opener">Deep Link Opener</h3>
<p>In our Lisk Mobile application, we also needed a utility for opening the main application and redirecting the user to a specific deep link. We have resolved this issue by enhancing the <em>MessagesManager</em>.</p>
<p>After setting up the main application to handle deep links by following <a href="https://facebook.github.io/react-native/docs/linking">the guide from official React Native documentation</a>, next step is to update the <em>MessagesManager</em> to provide a utility for opening deep links.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/45.png" alt=""><br><em>We have added openURL method to MessagesManager</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/46.png" alt=""><br><em>Also updated interface file of the MessagesManager to contain openURL method</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/47.png" alt=""><br><em>Usage of openURL method on React Native side</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/48.gif" alt=""><br><em>openURL method in action!</em></p>
<h3 id="display-a-loading-view-during-the-initial-load">Display a Loading View during the Initial Load</h3>
<p>The natural behavior of iMessage extensions is to show the application logo uploaded in the assets section during the initial load as shown below.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/49.png" alt=""><br><em>Default behavior of launch screen</em></p>
<p>In our case, we are also waiting for React Native bundle to be loaded until we see something to interact on the screen. Luckily, <em>RCTRootView</em> has a property named <em>loadingView</em> that allows us to provide a temporary view to be shown while the bundle is loading.</p>
<p>In order to enhance this experience, let’s create a view with the activity indicator and assign it to the <em>loadingView</em> property of <em>RCTRootView</em>.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/50.png" alt=""><br><em>Xcode -&gt; File -&gt; New -&gt; View</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/51.gif" alt=""><br><em>Using storyboard to set the layout of the LoadingView</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/52.png" alt=""><br><em>Updating the presentReactNative method of the MessagesViewController to make sure our RCTRootView instance uses LoadingView</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/53.gif" alt=""><br><em>End result of this section: LoadingView is presented until the React Native bundle is loaded.</em></p>
<h3 id="controlling-the-loading-view-from-the-react-native-side">Controlling the Loading View from the React Native Side</h3>
<p>Now that we have our blueprint for displaying that loading view, we can also spend a little effort to make it controllable from the React Native side.</p>
<p>This would be very handy if there’s a case you need to delay the initial render (eg: fetching data from the server) and don’t want to deal with creating another loading view that covers full screen for such a task.</p>
<p>First, the <em>presentReactNativeView</em> method of <em>MessagesViewController</em> needs to be refactored a little bit as following:</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/54.png" alt=""><br><em>presentReactNative method initializes and presents a LoadingView on top of the RCTRootView, instead of using the RCTRootView.loadingView property.</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/55.png" alt=""><br><em>In order to control the presence of that loadingView, we have added two methods to the MessagesManager</em></p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/56.png" alt=""><br><em>Updated interface file of the MessagesManager to contain methods for controlling the loadingView.</em></p>
<p>Now it’s time to make use of those freshly added methods in the React Native side. What we are going to do is to fake an asynchronous task in <em>componentDidMount</em> and delay the initial rendering of the content until that task is completed. We will also add an additional button to the sample set to toggle the loading screen again.</p>
<p><img src="https://altay.wtf/images/notes/react-native-imessage/57.png" alt=""><br><em>Making use of loadingView related methods on the React Native side</em></p>
<h2 id="final-thoughts">Final Thoughts</h2>
<p>Working on user-facing applications in an insular software environment such as that of Apple requires innovative solutions. While Apple definitely provides comprehensive documentation aimed at helping developers coding with native iOS, connecting the existing pieces to the native ecosystem is another thing altogether. After deciding to implement iMessage extension for the React Native-based <a href="https://twitter.com/LiskHQ">Lisk</a> Mobile, we experienced this obstacle first hand. Nonetheless, we found writing a bridge between React Native and the native iOS-based app an exciting and educational experience. We hope this tutorial will save you time in implementing a similar feature to your React Native application as well!</p>
]]></content>
        <author>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </author>
        <contributor>
            <name>Altay</name>
            <email>altay@aydemir.io</email>
            <uri>https://twitter.com/altaywtf</uri>
        </contributor>
    </entry>
</feed>